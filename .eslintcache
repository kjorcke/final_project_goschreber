[{"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js":"1","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js":"2","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js":"3","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js":"4","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js":"5","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Verwaltung.js":"6","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js":"7","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js":"8","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js":"9","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js":"10","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js":"11","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js":"12","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js":"13","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js":"14","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js":"15"},{"size":530,"mtime":1613222510349,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1613222510349,"results":"18","hashOfConfig":"17"},{"size":6856,"mtime":1613416076575,"results":"19","hashOfConfig":"17"},{"size":1366,"mtime":1613222510357,"results":"20","hashOfConfig":"17"},{"size":3494,"mtime":1613416076576,"results":"21","hashOfConfig":"17"},{"size":302,"mtime":1613222510285,"results":"22","hashOfConfig":"17"},{"size":222,"mtime":1613222510277,"results":"23","hashOfConfig":"17"},{"size":3672,"mtime":1613416360150,"results":"24","hashOfConfig":"17"},{"size":4142,"mtime":1613392341898,"results":"25","hashOfConfig":"17"},{"size":343,"mtime":1613242353283,"results":"26","hashOfConfig":"17"},{"size":1949,"mtime":1613414793788,"results":"27","hashOfConfig":"17"},{"size":7291,"mtime":1613297688950,"results":"28","hashOfConfig":"17"},{"size":1746,"mtime":1613382554303,"results":"29","hashOfConfig":"17"},{"size":1394,"mtime":1613222510293,"results":"30","hashOfConfig":"17"},{"size":2195,"mtime":1613415067697,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"f22ymv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js",[],["68","69"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js",["70","71","72","73","74","75","76","77","78"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js",["79","80","81","82","83","84","85","86"],"import React, {useState, useEffect} from \"react\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport KgvItem from \"./KgvItem\";\r\nimport useLocalStorage from '../useLocalStorage';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Favourites from \"./Favourites\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Envelope, Globe2 } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nfunction Map({kgvs, favourites, favouritedItems, setFavourites}) {\r\n\r\n  \r\n  function favouriteGarden(gardenid) {\r\n  \r\n      console.log(gardenid)\r\n      console.log(favourites.indexOf(gardenid))\r\n  \r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n    }\r\n    const isFavourite = (gartenid) => {\r\n      return favouritedItems.find((el) => el._id === gartenid) ? true : false\r\n    }\r\n\r\n    const web = (da) => {\r\n      return da ? true : false\r\n    }\r\n\r\n  const position = [51.330743159430824, 12.36348580378971]\r\n  const carrotIcon = L.icon({\r\n    iconUrl: carrot,\r\n    iconSize:     [38, 38], // size of the icon\r\n    shadowSize:   [50, 64], // size of the shadow\r\n    iconAnchor:   [19, 38],\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [0, -38]\r\n  });\r\n  \r\n\r\n\r\n    return (\r\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n              <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n            {kgvs.map(verein => (\r\n                <Marker\r\n                  key={verein._id}\r\n                  icon = {carrotIcon}\r\n                  position={[\r\n                    verein.geometry.coordinates[0],\r\n                    verein.geometry.coordinates[1]\r\n                  ]}\r\n                >\r\n                  <Popup >\r\n                  <Card border=\"success\" className=\"mb-1\" >\r\n                <Card.Body >\r\n                <Card.Title>{verein.kgvname}</Card.Title>\r\n                <Card.Text className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={15}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Text>\r\n                <Card.Text className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={15}/>{verein.email}</Card.Text>\r\n                {web(verein.web) && <Card.Text href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={15} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Text>}\r\n                <Container className=\"justify-content-center\">\r\n                    <Row >\r\n                        <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\r\n                        {isFavourite(verein._id) ? 'Entfernen' : 'Merken'}\r\n                        </Button>\r\n                        <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\r\n                    </Row>\r\n                </Container>\r\n              \r\n                \r\n            </Card.Body>\r\n        </Card>\r\n                  </Popup>\r\n                </Marker>  \r\n              ))}\r\n            </MapContainer>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Verwaltung.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js",["87","88","89","90","91"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js",["92","93","94"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, PersonCircle, Telephone, Envelope } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\n\r\nfunction AnzeigenItem() {\r\n\r\n    const {id} = useParams ();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [anzeige, setAnzeige] = useState([]);\r\n\r\n    const loadAnzeigeById = (searchQuery) => {\r\n        const API_URL = \"https://goschreber.herokuapp.com\"\r\n        const url = `${API_URL}/anzeigens/${id}`\r\n        setIsLoading(true);\r\n        setError(false);\r\n    \r\n        fetch(url)\r\n          .then((res) => {\r\n          \r\n          console.log(res);\r\n    \r\n            if (!res.ok) throw new Error(\"Oh noo\");\r\n            setIsLoading(false);\r\n            return res.json();\r\n          })\r\n          .then((json) => setAnzeige(json.data))\r\n          .catch((err) => setError(true));\r\n    \r\n      };\r\n    \r\n      useEffect(loadAnzeigeById, []);\r\n\r\n        console.log(anzeige)\r\n\r\n    return (\r\n            <Container fluid>\r\n                <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={6}>\r\n                        <Card border=\"success\" className=\"mb-1\">\r\n                            <Card.Body>\r\n                                    <Card.Img className=\"mb-3\" variant=\"top\" src=\"https://cdn.kiekmo.hamburg/vary/2020/02/listicle-kleingarten-lokstedt-shutterstock_437208574_content-728x410.jpg\" />\r\n                                    <Card.Title className=\"text-danger\"><h4>{anzeige.titel}</h4></Card.Title>\r\n                                    <Card.Text className=\"text-muted mb-3\">\r\n                                        <GeoAltFill className=\"mr-1\" color=\"green\" size={12}/> KGV \"{anzeige.kgv?.kgvname}\", {anzeige.kgv?.adresse.strasse}, {anzeige.kgv?.adresse.plz} Leipzig\r\n                                    </Card.Text>\r\n                                    <Card.Subtitle className=\"mb-3\">Beschreibung</Card.Subtitle>    \r\n                                    <Card.Text className=\"mb-3\">{anzeige.beschreibung}</Card.Text>\r\n                                    <Card.Subtitle className=\"mb-2\">Details</Card.Subtitle>\r\n                                    <Card.Text className=\"mb-1\">Preis:{anzeige.preis}€</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">Gartengröße: {anzeige.gartenqm}qm</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">Jährliche Pachtkosten: {anzeige.pachtkosten}€</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">Verfügbar ab: {anzeige.verfügbar}</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                       <Col xs={3}>\r\n                            <Row className=\"mb-1\">\r\n                                <Button className=\"mr-1\" variant=\"outline-danger\" block>Merken</Button>\r\n                            </Row>\r\n                            <Row className=\"mb-1\">\r\n                                <Button className=\"mr-1\" variant=\"outline-danger\" block>Teilen</Button> \r\n                            </Row>\r\n                            <Row>\r\n                                <Card border=\"success\" className=\"mb-1\" >\r\n                                 <Card.Body >\r\n                                    <Card.Subtitle className=\"mb-2\"><PersonCircle className=\"mr-2\"color=\"green\" size={17}/>{anzeige.name}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{anzeige.email}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-2\" color=\"green\" size={17}/>{anzeige.telefon}</Card.Subtitle>\r\n                                 </Card.Body>\r\n                                </Card>\r\n                            </Row>            \r\n                        </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnzeigenItem\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js",["95","96","97"],"import React, {useState} from 'react';\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\n\r\n\r\nfunction KgvItem({favouritedItems, verein, favClick}) {\r\n\r\n \r\n  const web = verein.web\r\n  const email = verein.email\r\n\r\n  const isFavourite = () => {\r\n    return favouritedItems.find((el) => el._id === verein._id) ? true : false\r\n  }\r\n\r\n    return (\r\n        <Card border=\"success\" className=\"mb-1\" >\r\n            <Card.Body >\r\n                <Card.Title>{verein.kgvname}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n                {email && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\r\n                {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\r\n                <Container className=\"justify-content-center\">\r\n                    <Row >\r\n                        <Button onClick={favClick} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\r\n                            {isFavourite()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\r\n                            {isFavourite() ? 'Entfernen' : 'Merken'}\r\n                        </Button>\r\n                        <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\r\n                    </Row>\r\n                </Container>\r\n              \r\n                \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default KgvItem\r\n\r\n/* variant={isFavourite() ? 'danger' : 'outline-danger'} */","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js",["98","99"],"import React, {useState} from 'react';\r\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\r\n\r\n\r\n/* \r\nconst [gartenId, setGartenId] = useState(\"\"); */\r\n    \r\nfunction handleSelect(e){\r\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\r\n\r\n    const kgv = (verein.map(el => el._id))\r\n    \r\n    setAnzeige({...anzeige, kgv:kgv})\r\n }\r\n\r\n\r\n\r\n/*\r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n*/\r\n\r\nreturn (\r\n   \r\n     <Container>\r\n            <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={8}>\r\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\r\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\r\n                                <h5 className=\"mb-3\">\r\n                                   Anzeigendetails\r\n                                </h5>\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Titel der Anzeige</Form.Label>\r\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Beschreibung</Form.Label>\r\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\r\n                                   </Form.Group>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Preis</Form.Label>\r\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Jährliche Pachtkosten</Form.Label>\r\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                \r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Größe</Form.Label>\r\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Verfügbar ab</Form.Label>\r\n                                                        <Form.Control value={anzeige.verfügbar} onChange={(e) => setAnzeige({...anzeige, verfügbar:e.target.value})}type=\"text\" name=\"verfügbar\"  as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                    <Form.Label>Kleingartenverein</Form.Label>\r\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \r\n                                                    as=\"select\">\r\n                                                    <option>bitte auswählen</option>\r\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <h5 className=\"mb-3\">\r\n                                                    Anbieterdetails\r\n                                                </h5>\r\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Name</Form.Label>\r\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                <Button variant=\"success\" type=\"submit\">\r\n                                                Anzeige aufgeben\r\n                                                </Button>\r\n                                                \r\n                                </Form>\r\n                            </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Inserieren\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js",["100","101","102"],"import React from 'react';\r\nimport { Container, Col, Row, Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n            <Navbar expand=\"xl\">\r\n            <Navbar.Brand href=\"/\"><h4 className=\"text-danger\"><strong>GO SCHREBER</strong></h4></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\r\n                <Nav>\r\n                    <Nav.Item  className=\"ml-6\">\r\n                        <Nav.Link eventKey=\"home\" href=\"/\"><Button variant=\"success\">Vereine</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link eventKey=\"frei\" href=\"/frei\"><Button variant=\"success\">Freie Gärten</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/inserieren\"><Button variant=\"success\">Anzeige aufgeben</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/verwalten\"><Button variant=\"success\">Anzeigen verwalten</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/merken\"><Button variant=\"success\">Merkliste</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n       \r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":25,"column":10,"nodeType":"110","messageId":"111","endLine":25,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":26,"column":10,"nodeType":"110","messageId":"111","endLine":26,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":30,"column":9,"nodeType":"110","messageId":"111","endLine":30,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":91,"column":74,"nodeType":"117","messageId":"118","endLine":91,"endColumn":76},{"ruleId":"115","severity":1,"message":"116","line":113,"column":52,"nodeType":"117","messageId":"118","endLine":113,"endColumn":54},{"ruleId":"115","severity":1,"message":"116","line":117,"column":76,"nodeType":"117","messageId":"118","endLine":117,"endColumn":78},{"ruleId":"115","severity":1,"message":"116","line":137,"column":48,"nodeType":"117","messageId":"118","endLine":137,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":141,"column":73,"nodeType":"117","messageId":"118","endLine":141,"endColumn":75},{"ruleId":"108","severity":1,"message":"119","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"120","line":1,"column":26,"nodeType":"110","messageId":"111","endLine":1,"endColumn":35},{"ruleId":"108","severity":1,"message":"121","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"122","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"123","line":7,"column":9,"nodeType":"110","messageId":"111","endLine":7,"endColumn":24},{"ruleId":"108","severity":1,"message":"124","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":18},{"ruleId":"108","severity":1,"message":"125","line":9,"column":25,"nodeType":"110","messageId":"111","endLine":9,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":29,"column":54,"nodeType":"117","messageId":"118","endLine":29,"endColumn":56},{"ruleId":"108","severity":1,"message":"119","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"120","line":1,"column":26,"nodeType":"110","messageId":"111","endLine":1,"endColumn":35},{"ruleId":"108","severity":1,"message":"126","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"108","severity":1,"message":"125","line":2,"column":25,"nodeType":"110","messageId":"111","endLine":2,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":25,"column":48,"nodeType":"117","messageId":"118","endLine":25,"endColumn":50},{"ruleId":"108","severity":1,"message":"112","line":12,"column":12,"nodeType":"110","messageId":"111","endLine":12,"endColumn":21},{"ruleId":"108","severity":1,"message":"113","line":13,"column":12,"nodeType":"110","messageId":"111","endLine":13,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":36,"column":34,"nodeType":"129","endLine":36,"endColumn":36,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"125","line":2,"column":25,"nodeType":"110","messageId":"111","endLine":2,"endColumn":28},{"ruleId":"108","severity":1,"message":"131","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":16},{"ruleId":"108","severity":1,"message":"132","line":11,"column":18,"nodeType":"110","messageId":"111","endLine":11,"endColumn":27},{"ruleId":"108","severity":1,"message":"119","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"133","line":15,"column":60,"nodeType":"117","messageId":"118","endLine":15,"endColumn":62},{"ruleId":"108","severity":1,"message":"134","line":2,"column":44,"nodeType":"110","messageId":"111","endLine":2,"endColumn":55},{"ruleId":"108","severity":1,"message":"135","line":2,"column":57,"nodeType":"110","messageId":"111","endLine":2,"endColumn":61},{"ruleId":"108","severity":1,"message":"136","line":2,"column":63,"nodeType":"110","messageId":"111","endLine":2,"endColumn":74},{"ruleId":"108","severity":1,"message":"125","line":2,"column":25,"nodeType":"110","messageId":"111","endLine":2,"endColumn":28},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'KgvItem' is defined but never used.","'useLocalStorage' is defined but never used.","'CopyToClipboard' is defined but never used.","'Favourites' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'merken' is assigned a value but never used.","'setMerken' is assigned a value but never used.","Expected '===' and instead saw '=='.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [id]",{"range":"142","text":"143"},[1071,1073],"[id]"]