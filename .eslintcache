[{"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/index.js":"1","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/App.js":"2","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/reportWebVitals.js":"3","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Layout.js":"4","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Header.js":"5","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/FreieGaerten.js":"6","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Map.js":"7","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Inserieren.js":"8","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/FreiItem.js":"9","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/useLocalStorage.js":"10","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/KgvItem.js":"11","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Favourites.js":"12"},{"size":513,"mtime":1611675827789,"results":"13","hashOfConfig":"14"},{"size":1662,"mtime":1612949709726,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611671116999,"results":"16","hashOfConfig":"14"},{"size":210,"mtime":1612708887655,"results":"17","hashOfConfig":"14"},{"size":1351,"mtime":1612808914568,"results":"18","hashOfConfig":"14"},{"size":2804,"mtime":1612988218029,"results":"19","hashOfConfig":"14"},{"size":3642,"mtime":1612882906131,"results":"20","hashOfConfig":"14"},{"size":5675,"mtime":1612986440444,"results":"21","hashOfConfig":"14"},{"size":654,"mtime":1612880041940,"results":"22","hashOfConfig":"14"},{"size":1328,"mtime":1612436302280,"results":"23","hashOfConfig":"14"},{"size":1051,"mtime":1612943013269,"results":"24","hashOfConfig":"14"},{"size":300,"mtime":1612610301311,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pk5rxy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/index.js",[],["55","56"],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/App.js",["57","58","59"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Map from \"./Components/Map\";\nimport Header from \"./Components/Header\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row,} from 'react-bootstrap';\nimport Layout from './Components/Layout';\nimport FreieGaerten from './Components/FreieGaerten';\nimport Inserieren from './Components/Inserieren';\n\nfunction App() {\n  \n  const [kgvs, setKgvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n\n  const loadKgvs = (searchQuery) => {\n    const API_URL = \"http://localhost:5000\"\n    const url = `${API_URL}/kgvs`\n    setIsLoading(true);\n    setError(false);\n\n    fetch(url)\n      .then((res) => {\n      \n      console.log(res);\n\n        if (!res.ok) throw new Error(\"Oh noo\");\n        setIsLoading(false);\n        return res.json();\n      })\n      .then((json) => setKgvs(json.data))\n      .catch((err) => setError(true));\n\n  };\n\n    useEffect(loadKgvs, []);\n    \n    \n\n\n\n  return (\n    \n  <Container fluid>\n    <Row>\n      <Col>\n      <Header />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n      <Router>    \n        <Switch>\n          <Route exact path=\"/\"> \n            <Map kgvs={kgvs}/>\n          </Route>\n          <Route exact path=\"/frei\"> \n            <FreieGaerten kgvs={kgvs}/>\n          </Route>\n          <Route exact path=\"/inserieren\"> \n            <Inserieren kgvs={kgvs}/>\n          </Route>\n        </Switch>  \n      </Router>\n      </Col>\n    </Row>\n      \n  </Container>        \n  )\n}\n\nexport default App;\n","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/reportWebVitals.js",[],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Layout.js",[],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Header.js",["60","61","62"],"import React from 'react';\nimport { Container, Row, Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\n\n\nfunction Header() {\n\n\n    return (\n        \n        <Navbar bg=\"sucess\" expand=\"xl\">\n        <Navbar.Brand href=\"#\">Go Schreber</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\n                <Form inline className=\"mr-2\">\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n                <Nav className=\"justify-content-center\" fill variant=\"tabs\" defaultActiveKey=\"/\">\n                    <Nav.Item>\n                        <Nav.Link href=\"/\">Vereine</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/frei\" eventKey=\"link-1\">Freie GÃ¤rten</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <Nav >\n                    <Nav.Item className=\"ml-6\">\n                        <Nav.Link href=\"/inserieren\"><Button variant=\"success\">Anzeige aufgeben</Button></Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                \n        </Navbar.Collapse>\n    </Navbar>\n      \n    )\n\n}\n\nexport default Header\n","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/FreieGaerten.js",["63","64","65","66","67","68","69","70","71","72","73"],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Map.js",["74","75","76","77"],"import React, {useState, useEffect} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\n\n\n\nfunction Map({kgvs}) {\n\n\n  const position = [51.330743159430824, 12.36348580378971]\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize:     [38, 38], // size of the icon\n    shadowSize:   [50, 64], // size of the shadow\n    iconAnchor:   [19, 38],\n    shadowAnchor: [4, 62],  // the same for the shadow\n    popupAnchor:  [0, -38]\n  });\n\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n\n  function favouriteGarden(gardenid) {\n\n      console.log(gardenid)\n      console.log(favourites.indexOf(gardenid))\n\n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n    }\n\n    const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\n    console.log(favouritedItems)\n  \n\n    return (\n    <Container fluid>\n      <Row>\n        <Col xs={7}>\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n              <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n\n            {kgvs.map(verein => (\n                <Marker\n                  key={verein._id}\n                  icon = {carrotIcon}\n                  position={[\n                    verein.geometry.coordinates[0],\n                    verein.geometry.coordinates[1]\n                  ]}\n                >\n                  <Popup>\n                    <Card className=\"mb-1\" style={{ width: '15rem' }}>\n                      <Card.Body>\n                          <Card.Title>{verein.kgvname}</Card.Title>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\n                          <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\n                          <CopyToClipboard text={verein.email}>\n                              <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\n                          </CopyToClipboard>\n                       </Card.Body>\n                    </Card>\n                  </Popup>\n                </Marker>  \n              ))}\n            </MapContainer>\n        </Col>\n\n        <Col>\n            {kgvs.map(verein => <KgvItem favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)} \n        </Col>\n        <Col>\n          <h2>Favourite List</h2>\n          <CopyToClipboard text={favouritedItems.map(el => el.email)}>\n            <button>clipboard all email addresses</button>\n          </CopyToClipboard>\n          {favouritedItems.map(verein => <Favourites favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\n        </Col>\n      </Row>\n    </Container>\n   \n    )\n}\n\nexport default Map\n","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Inserieren.js",["78","79"],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/FreiItem.js",["80"],"import React from 'react';\nimport {Card, Button} from \"react-bootstrap\";\n\n\n\nfunction FreiItem({freigarten}) {\n    return (\n        <Card className=\"mb-1\" style={{ width: '25rem' }}>\n            <Card.Body>\n                <Card.Title>{freigarten.titel}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">{freigarten.beschreibung}</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{freigarten.preis}â¬</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{freigarten.gartenqm}qm</Card.Subtitle>\n                \n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default FreiItem\n","/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/useLocalStorage.js",[],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/KgvItem.js",[],"/home/kathleen/Dokumente/GardenFinder/gartenFRONT/src/Components/Favourites.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":14},{"ruleId":"85","severity":1,"message":"89","line":15,"column":10,"nodeType":"87","messageId":"88","endLine":15,"endColumn":19},{"ruleId":"85","severity":1,"message":"90","line":16,"column":10,"nodeType":"87","messageId":"88","endLine":16,"endColumn":15},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"85","severity":1,"message":"92","line":2,"column":21,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"93","line":2,"column":39,"nodeType":"87","messageId":"88","endLine":2,"endColumn":50},{"ruleId":"85","severity":1,"message":"94","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":17},{"ruleId":"85","severity":1,"message":"95","line":3,"column":30,"nodeType":"87","messageId":"88","endLine":3,"endColumn":34},{"ruleId":"85","severity":1,"message":"96","line":3,"column":36,"nodeType":"87","messageId":"88","endLine":3,"endColumn":42},{"ruleId":"85","severity":1,"message":"97","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":21},{"ruleId":"85","severity":1,"message":"98","line":5,"column":23,"nodeType":"87","messageId":"88","endLine":5,"endColumn":32},{"ruleId":"85","severity":1,"message":"99","line":5,"column":34,"nodeType":"87","messageId":"88","endLine":5,"endColumn":40},{"ruleId":"85","severity":1,"message":"100","line":5,"column":42,"nodeType":"87","messageId":"88","endLine":5,"endColumn":47},{"ruleId":"85","severity":1,"message":"101","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":9},{"ruleId":"85","severity":1,"message":"102","line":7,"column":9,"nodeType":"87","messageId":"88","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"89","line":15,"column":12,"nodeType":"87","messageId":"88","endLine":15,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":16,"column":12,"nodeType":"87","messageId":"88","endLine":16,"endColumn":17},{"ruleId":"85","severity":1,"message":"103","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":24},{"ruleId":"85","severity":1,"message":"104","line":1,"column":26,"nodeType":"87","messageId":"88","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":40,"column":54,"nodeType":"107","messageId":"108","endLine":40,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":44,"column":76,"nodeType":"107","messageId":"108","endLine":44,"endColumn":78},{"ruleId":"105","severity":1,"message":"109","line":16,"column":60,"nodeType":"107","messageId":"108","endLine":16,"endColumn":62},{"ruleId":"110","severity":1,"message":"111","line":29,"column":5,"nodeType":"112","messageId":"113","endLine":32,"endColumn":6},{"ruleId":"85","severity":1,"message":"96","line":2,"column":15,"nodeType":"87","messageId":"88","endLine":2,"endColumn":21},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'NavDropdown' is defined but never used.","'divIcon' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'L' is defined but never used.","'carrot' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]