[{"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/index.js":"1","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/reportWebVitals.js":"2","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/App.js":"3","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/useLocalStorage.js":"4","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Map.js":"5","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Header.js":"6","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Inserieren.js":"7","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/KgvItem.js":"8","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Favourites.js":"9","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FreieGaerten.js":"10","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FreiItem.js":"11","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenMap.js":"12","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenFreiItem.js":"13","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/AnzeigenItem.js":"14","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenVereinItem.js":"15","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/VerwaltungsItem.js":"16"},{"size":601,"mtime":1615819117177,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1615819117177,"results":"19","hashOfConfig":"18"},{"size":8759,"mtime":1615819117173,"results":"20","hashOfConfig":"18"},{"size":1328,"mtime":1615819117177,"results":"21","hashOfConfig":"18"},{"size":3933,"mtime":1615819117173,"results":"22","hashOfConfig":"18"},{"size":2058,"mtime":1615819117173,"results":"23","hashOfConfig":"18"},{"size":7123,"mtime":1615819117173,"results":"24","hashOfConfig":"18"},{"size":1767,"mtime":1615819117173,"results":"25","hashOfConfig":"18"},{"size":322,"mtime":1615819117173,"results":"26","hashOfConfig":"18"},{"size":3705,"mtime":1615819117173,"results":"27","hashOfConfig":"18"},{"size":2169,"mtime":1615819117173,"results":"28","hashOfConfig":"18"},{"size":6244,"mtime":1615819117173,"results":"29","hashOfConfig":"18"},{"size":4466,"mtime":1615819117173,"results":"30","hashOfConfig":"18"},{"size":6094,"mtime":1615819117173,"results":"31","hashOfConfig":"18"},{"size":1846,"mtime":1615819117173,"results":"32","hashOfConfig":"18"},{"size":2320,"mtime":1615819117173,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bqhb5s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"36"},"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/index.js",[],["80","81"],"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/reportWebVitals.js",[],"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/App.js",["82","83","84","85","86","87","88","89"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Map from \"./Components/Map\";\nimport Header from \"./Components/Header\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row, Button, Image} from 'react-bootstrap';\nimport FreieGaerten from './Components/FreieGaerten';\nimport Inserieren from './Components/Inserieren';\nimport KgvItem from './Components/KgvItem';\nimport Favourites from './Components/Favourites';\nimport AnzeigenItem from './Components/AnzeigenItem';\nimport FreiItem from './Components/FreiItem';\nimport FavoritenMap from './Components/FavoritenMap';\nimport FavoritenFreiItem from './Components/FavoritenFreiItem';\nimport FavoritenVereinItem from './Components/FavoritenVereinItem';\nimport VerwaltungsItem from './Components/VerwaltungsItem';\nimport axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nfunction App() {\n  \n  const [kgvs, setKgvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [gaerten, setGaerten] = useState([]);\n  const [anzeige, setAnzeige] = useState({titel:'', beschreibung:'', kgv:'', pachtkosten:'', preis:'', verfÃ¼gbar:'', gartemqm:'', name:'', email:'', telefon:''})\n  const [ownAnzeige, setOwnAnzeige] = useLocalStorage('anzeigen', []);\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n\n  const history = useHistory();\n\n  const loadKgvs = (searchQuery) => {\n    const API_URL = \"https://goschreber.herokuapp.com\"\n    const url = `${API_URL}/kgvs`\n    setIsLoading(true);\n    setError(false);\n\n    fetch(url)\n      .then((res) => {\n      \n      console.log(res);\n\n        if (!res.ok) throw new Error(\"Oh noo\");\n        setIsLoading(false);\n        return res.json();\n      })\n      .then((json) => setKgvs(json.data))\n      .catch((err) => setError(true));\n\n  };\n\n    useEffect(loadKgvs, []);\n  \n  \n  const loadGaerten = (searchQuery) => {\n      const API_URL = \"https://goschreber.herokuapp.com\"\n      const url = `${API_URL}/anzeigens`\n      setIsLoading(true);\n      setError(false);\n  \n      fetch(url)\n        .then((res) => {\n        \n        console.log(res);\n  \n          if (!res.ok) throw new Error(\"Oh noo\");\n          setIsLoading(false);\n          return res.json();\n        })\n        .then((json) => setGaerten(json.data))\n        .catch((err) => setError(true));\n        };\n\n      useEffect(loadGaerten, []);\n/* //////////////////////////// ANZEIGEN IN LOCAL STORAGE///////////////////////////////////// */\n\nfunction handleSubmit(e) { \n    e.preventDefault();\n    axios\n        .post(\"https://goschreber.herokuapp.com/anzeigens\", anzeige)\n        .then((res) => {\n            const {_id} = res.data.data;\n            setOwnAnzeige([\n                ...ownAnzeige,\n                _id\n            ]);\n            history.push(`frei/${_id}`);\n        })  \n  }\n  const userAnzeigen = gaerten.filter(({_id}) => ownAnzeige.indexOf(_id) != -1)\n\n  /* ////////////////////////////////////////////////////////////////////////////////////////// */\n\n\n  /* ///////////////////// SETTING FAVOURITES IN LOCAL STORAGE /////////////////////*/\n  /* ////////////////////////////////////////////////////////////////////////////////*/\n\n\n  \n  function favouriteGarden(gardenid) {\n\n    console.log(gardenid)\n    console.log(favourites.indexOf(gardenid))\n\n    if (favourites.indexOf(gardenid) === -1){\n      setFavourites([\n        ...favourites,\n        gardenid\n      ])\n    } else {\n      \n      setFavourites(favourites.filter(item => item != gardenid))\n    }\n  }\n\n    const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\n    console.log(favouritedItems)\n\n/*/////////////////////////////////////////////////////////////////////////////////////////////*/\n\n\nconst [merkFrei, setMerkFrei] = useLocalStorage('merkFreiGarten', []);\n  \nfunction merkFreiGarten(gartenid) {\n\n  console.log(gartenid)\n  console.log(merkFrei.indexOf(gartenid))\n\n  if (merkFrei.indexOf(gartenid) === -1){\n    setMerkFrei([\n      ...merkFrei,\n      gartenid\n    ])\n  } else {\n    \n    setMerkFrei(merkFrei.filter(item => item != gartenid))\n  }\n}\n\n  const merkFreiItems = gaerten.filter(({_id}) => merkFrei.indexOf(_id) != -1)\n  console.log(merkFreiItems)\n/*////////////////////////////////////////////////////////////////////////////*/\n\n\n\n  return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Container fluid>\n              <Row>\n                <Col xs={8}>\n                  <Map favouritedItems={favouritedItems} favourites={favourites} setFavourites={setFavourites} kgvs={kgvs}/>\n                </Col>\n                <Col>\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                    {kgvs.map(verein => <KgvItem favouritedItems={favouritedItems} favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\n                 </Scrollbars>\n                </Col>\n              </Row>\n            </Container> \n          </Route>\n          <Route exact path=\"/frei\">\n            <Container fluid>\n              <Row>\n            <Col xs={8}>\n              <FreieGaerten ownAnzeige={ownAnzeige} setMerkFrei={setMerkFrei} merkFrei={merkFrei} merkFreiItems={merkFreiItems} gaerten= {gaerten} kgvs={kgvs}/>\n            </Col>  \n            <Col>\n              <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                {gaerten.map(freigarten=> <FreiItem merkFreiItems={merkFreiItems} merkClick={() => merkFreiGarten(freigarten._id)} freigarten={freigarten} key={freigarten._id}/>)}\n              </Scrollbars>\n            </Col>\n            </Row>\n            </Container>\n          </Route>\n          <Route path=\"/frei/:id\"> \n            <AnzeigenItem setMerkFrei={setMerkFrei} merkFrei={merkFrei} merkFreiItems={merkFreiItems} />\n          </Route>\n          <Route exact path=\"/inserieren\"> \n            <Inserieren handleSubmit={handleSubmit} anzeige={anzeige} setAnzeige={setAnzeige} gaerten= {gaerten} kgvs={kgvs}/>\n          </Route>\n          <Route exact path=\"/verwalten\">\n            <Container className=\"mt-4\"fluid>\n              <Row>\n              <Col xs={8}>\n                <Image src=\"https://www.leipzig-lese.de/media_leipzig_lese/schreber_kopfbild_dsc04811.jpg\" fluid rounded/>\n            </Col>\n            <Col>\n              {userAnzeigen.map(eigAnzeige => <VerwaltungsItem ownAnzeige={ownAnzeige} setOwnAnzeige={setOwnAnzeige} eigAnzeige={eigAnzeige} key={eigAnzeige._id}/>)} \n            </Col>\n              </Row>\n            </Container>\n          </Route>\n          <Route exact path=\"/merken\">\n            <Container fluid>\n              <Row>\n                <Col>\n                  <h4 className=\"text-center mb-3\">Merkliste Vereine</h4>\n                  <CopyToClipboard text={favouritedItems.map(el => el.email)}>\n                   <Button className=\"mb-2\"variant=\"outline-success\">Alle Email-Adressen in die Zwischenablage kopieren</Button>\n                  </CopyToClipboard>\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                  {favouritedItems.map(verein => <FavoritenVereinItem favClick={() => favouriteGarden(verein._id)} verein={verein} favouritedItems={favouritedItems} setFavourites={setFavourites} favourites={favourites} key={verein._id}/>)}\n                  </Scrollbars>\n                </Col>\n                <Col xs={6}>\n                  {/* <h4 style={{color:\"white\" }}>g</h4> */}\n                 <FavoritenMap favouritedItems={favouritedItems} setFavourites={setFavourites} favourites={favourites} merkFreiItems={merkFreiItems} setMerkFrei={setMerkFrei} merkFrei={merkFrei}/>\n                </Col>\n                <Col>\n                  <h4 className=\"text-center mb-3\">Merkliste GÃ¤rten</h4>\n                  <CopyToClipboard text={merkFreiItems.map(el => el.email)}>\n                   <Button className=\"mb-2\"variant=\"outline-success\">Alle Email-Adressen in die Zwischenablage kopieren</Button>\n                  </CopyToClipboard>\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                    {merkFreiItems.map(freigarten => <FavoritenFreiItem merkClick={() => merkFreiGarten(freigarten._id)} freigarten={freigarten} key={freigarten._id} merkFreiItems={merkFreiItems} setMerkFrei={setMerkFrei} merkFrei={merkFrei}/>)}\n                  </Scrollbars>\n                </Col>\n              </Row>\n              </Container> \n          </Route>\n        </Switch>  \n      </>\n  )\n}\n\nexport default App;\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/useLocalStorage.js",[],"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Map.js",["90","91","92","93","94","95","96","97"],"import React, {useState, useEffect} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\n\n\nfunction Map({kgvs, favourites, favouritedItems, setFavourites}) {\n\n  \n  function favouriteGarden(gardenid) {\n  \n      console.log(gardenid)\n      console.log(favourites.indexOf(gardenid))\n  \n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n    }\n\n    const isFavourite = (gartenid) => {\n      return favouritedItems.find((el) => el._id === gartenid) ? true : false\n    }\n    \n    const web = (website) => {\n      return website ? true : false\n    }\n\n    const email = (emailadresse) => {\n      return emailadresse ? true : false\n    }\n\n  const position = [51.330743159430824, 12.36348580378971]\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize:     [38, 38], // size of the icon\n    shadowSize:   [50, 64], // size of the shadow\n    iconAnchor:   [19, 38],\n    shadowAnchor: [4, 62],  // the same for the shadow\n    popupAnchor:  [0, -38]\n  });\n  \n\n\n    return (\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n              <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n            {kgvs.map(verein => (\n                <Marker\n                  key={verein._id}\n                  icon = {carrotIcon}\n                  position={[\n                    verein.geometry.coordinates[0],\n                    verein.geometry.coordinates[1]\n                  ]}\n                >\n                  <Popup >\n                    <Card border=\"success\" style={{ width: '19rem' }} >\n                      <Card.Body >\n                          <Card.Title>{verein.kgvname}</Card.Title>\n                          <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                          {email(verein.email) && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n                          {web(verein.web) && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n                          <Container className=\"justify-content-center\">\n                              <Row >\n                                  <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                                      {isFavourite(verein._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                      {isFavourite(verein._id)? 'Entfernen' : 'Merken'}\n                                  </Button>\n                                  <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n                              </Row>\n                          </Container>\n                      </Card.Body>\n                    </Card>\n                  </Popup>\n                </Marker>  \n              ))}\n            </MapContainer>\n    )\n}\n\nexport default Map\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Header.js",["98","99","100","101"],"import React from 'react';\nimport { Container, Col, Row, Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport  carrot from '../assets/carrot.png';\nimport { NavLink } from 'react-router-dom';\n\nfunction Header() {\n\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n            <Navbar expand=\"sm\">\n        \n                <img\n                    src={carrot}\n                    width=\"35\"\n                    height=\"35\"\n                    /* className=\"d-inline-block\" */\n                    alt=\"React Bootstrap logo\"\n                />\n            \n            <h4 className=\"text-danger mt-2\"><strong>GO SCHREBER</strong></h4>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\n                <Nav>\n                    <Nav.Item  className=\"ml-6\">\n                        <Nav.Link href='/'><Button className=\"mr-1\" variant=\"success\">Vereine</Button></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <Nav.Link href=\"/frei\"><Button className=\"mr-1\" variant=\"success\">Freie GÃ¤rten</Button></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <Nav.Link href=\"/inserieren\"><Button className=\"mr-1\" variant=\"success\">Anzeige aufgeben</Button></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <Nav.Link href=\"/verwalten\"><Button className=\"mr-1\" variant=\"success\">Anzeigen verwalten</Button></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item className=\"ml-6\">\n                        <Nav.Link href=\"/merken\"><Button variant=\"success\">Merkliste</Button></Nav.Link>\n                    </Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n                </Col>\n            </Row>\n        </Container>\n       \n      \n    )\n\n}\n\nexport default Header\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Inserieren.js",["102","103"],"import React, {useState} from 'react';\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\n\n\n\n\n\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\n\n\n/* \nconst [gartenId, setGartenId] = useState(\"\"); */\n    \nfunction handleSelect(e){\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\n\n    const kgv = (verein.map(el => el._id))\n    \n    setAnzeige({...anzeige, kgv:kgv})\n }\n\n\n\n/*\n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n*/\n\nreturn (\n   \n     <Container>\n            <Row className=\"justify-content-md-center mt-5\">\n                    <Col xs={8}>\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\n                                <h5 className=\"mb-3\">\n                                   Anzeigendetails\n                                </h5>\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Titel der Anzeige</Form.Label>\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Beschreibung</Form.Label>\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\n                                   </Form.Group>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Preis</Form.Label>\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>JÃ¤hrliche Pachtkosten</Form.Label>\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                \n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>GrÃ¶Ãe</Form.Label>\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>VerfÃ¼gbar ab</Form.Label>\n                                                        <Form.Control value={anzeige.verfÃ¼gbar} onChange={(e) => setAnzeige({...anzeige, verfÃ¼gbar:e.target.value})}type=\"text\" name=\"verfÃ¼gbar\"  as=\"textarea\" rows={1} />\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Label>Kleingartenverein</Form.Label>\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \n                                                    as=\"select\">\n                                                    <option>bitte auswÃ¤hlen</option>\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                <h5 className=\"mb-3\">\n                                                    Anbieterdetails\n                                                </h5>\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Name</Form.Label>\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Email</Form.Label>\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                    <Form.Label>Telefonnummer</Form.Label>\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\n                                                 </Form.Group>\n                                                <Button variant=\"success\" type=\"submit\">\n                                                Anzeige aufgeben\n                                                </Button>\n                                </Form>\n                            </Card>\n                    </Col>\n                </Row>\n        </Container>\n\n    )\n}\n\nexport default Inserieren\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/KgvItem.js",["104","105","106"],"import React from 'react';\nimport {Container, Row, Col, Card, Button, ListGroup} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\n\n\n\n\nfunction KgvItem({favouritedItems, verein, favClick}) {\n\n \n  const web = verein.web\n  const email = verein.email\n\n  const isFavourite = () => {\n    return favouritedItems.find((el) => el._id === verein._id) ? true : false\n  }\n\n    return (\n        <Card border=\"success\" className=\"mb-1\" >\n            <ListGroup>\n            <ListGroup.Item>\n            <Card.Title>{verein.kgvname}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                {email && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n                {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n                <Button onClick={favClick} size=\"sm\" className=\"mb-1 mr-1\" variant='outline-danger'>\n                            {isFavourite()? <HeartFill className=\"mr-2 mr-1\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isFavourite()? 'Entfernen' : 'Merken'}\n                </Button>\n                <Button size=\"sm\" className=\"mb-1\" variant=\"outline-danger\">Teilen</Button>\n            </ListGroup.Item>\n            </ListGroup>\n        </Card>\n    )\n}\n\nexport default KgvItem\n\n/* variant={isFavourite() ? 'danger' : 'outline-danger'} */","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/Favourites.js",[],"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FreieGaerten.js",["107","108","109","110","111"],"import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport {NavLink} from 'react-router-dom';\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\n\n    \nfunction FreieGaerten({gaerten, ownAnzeige, setMerkFrei, merkFrei, merkFreiItems}) {\n\n  \n  function merkFreiGarten(gartenid) {\n\n    console.log(gartenid)\n    console.log(merkFrei.indexOf(gartenid))\n    console.log(ownAnzeige)\n\n    if (merkFrei.indexOf(gartenid) === -1){\n      setMerkFrei([\n        ...merkFrei,\n        gartenid\n      ])\n    } else {\n      \n      setMerkFrei(merkFrei.filter(item => item != gartenid))\n    }\n  }\n\n  const isMerkFrei = (freiId) => {\n    return merkFreiItems.find((el) => el._id === freiId) ? true : false\n  }\n  \n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n\n    return (\n                <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\n                  <TileLayer\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                {gaerten.map(garten => (\n                    <Marker\n                      key={garten._id}\n                      icon = {carrotIcon}\n                      position={[\n                        garten.kgv.geometry.coordinates[0],\n                        garten.kgv.geometry.coordinates[1]\n                      ]}\n                    >\n                      <Popup>\n                          <Card border=\"success\" style={{ width: '19rem' }}>\n                            <Card.Body className=\"mb-1\"> \n                                <Card.Text className=\"mb-1 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{garten.kgv.kgvname}</Card.Text>\n                                <Card.Title className=\"mb-1 text-success\"><h4>{garten.titel}</h4></Card.Title>\n                                <Card.Text className=\"mb-1 mt-1 text-muted text-truncate\">{garten.beschreibung}</Card.Text>\n                                <Card.Subtitle className=\"mb-1 mt-1 text-success\"><h5>{garten.preis}â¬</h5></Card.Subtitle>\n                                <Row >\n                                    <NavLink to={`/frei/${garten._id}`}>\n                                        <Button size=\"sm\" className=\"mr-2 ml-3\" variant=\"outline-danger\">Details</Button>\n                                    </NavLink>\n                                    <Button onClick={() => merkFreiGarten(garten._id)} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                                    {isMerkFrei(garten._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                    {isMerkFrei(garten._id)? 'Entfernen' : 'Merken'}\n                          </Button>\n                                        <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                  </Popup>\n                    </Marker>  \n                  ))}\n                </MapContainer>\n    )\n}\n\nexport default FreieGaerten\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FreiItem.js",["112"],"import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\n\n\nfunction FreiItem({freigarten, merkClick, merkFreiItems}) {\n\n    const isMerkFrei = () => {\n        return merkFreiItems.find((el) => el._id === freigarten._id) ? true : false\n      }\n\n    return (\n            <Container>\n                <Row>\n                <Card border=\"success\" className=\"mb-1\" style={{ width: '26rem' }}>\n                    <Card.Body className=\"m-1\">\n                        <Row>\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\n                        </Row>\n                        <Row>\n                            <Card.Title>{freigarten.titel}</Card.Title>\n                        </Row>\n                         <Row>\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\n                         </Row>\n                        <Row>\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}â¬</strong></h5>\n                        </Row>\n    \n                        <Row>\n                            <NavLink to={`/frei/${freigarten._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\n                            </NavLink>\n                            <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isMerkFrei()? 'Entfernen' : 'Merken'}\n                        </Button>\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>     \n                        </Row>\n                      \n                    </Card.Body>\n                </Card>\n            </Row>\n        </Container>\n        \n      \n    )\n}\n\nexport default FreiItem\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenMap.js",["113","114","115","116"],"import React, {useState} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\nfunction FavoritenMap({favouritedItems, merkFreiItems, setFavourites, favourites, setMerkFrei, merkFrei }) {\n\n\n    function favouriteGarden(gardenid) {\n  \n        console.log(gardenid)\n        console.log(favourites.indexOf(gardenid))\n    \n        if (favourites.indexOf(gardenid) === -1){\n          setFavourites([\n            ...favourites,\n            gardenid\n          ])\n        } else {\n          \n          setFavourites(favourites.filter(item => item != gardenid))\n        }\n      }\n     \n      const isFavourite = (gartenid) => {\n        return favouritedItems.find((el) => el._id === gartenid) ? true : false\n      }\n\n      const web = (website) => {\n        return website ? true : false\n      }\n  \n      const email = (emailadresse) => {\n        return emailadresse ? true : false\n      }\n /*77777777777777777777777777777777777777777777777777777777777777777777777 */\n      function merkFreiGarten(gartenid) {\n\n        console.log(gartenid)\n        console.log(merkFrei.indexOf(gartenid))\n    \n        if (merkFrei.indexOf(gartenid) === -1){\n          setMerkFrei([\n            ...merkFrei,\n            gartenid\n          ])\n        } else {\n          \n          setMerkFrei(merkFrei.filter(item => item != gartenid))\n        }\n      }\n    \n      const isMerkFrei = (freiId) => {\n        return merkFreiItems.find((el) => el._id === freiId) ? true : false\n      }\n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n    \n\n\n    return (\n        <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n        <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      {favouritedItems.map(verein => (\n          <Marker\n            key={verein._id}\n            icon = {carrotIcon}\n            position={[\n              verein.geometry.coordinates[0],\n              verein.geometry.coordinates[1]\n            ]}\n          >\n            <Popup >\n            <Card border=\"success\" style={{ width: '19rem' }} >\n            <Card.Body>\n                <Card.Title>{verein.kgvname}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                {email(verein.email) && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n                    {web(verein.web) && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n                    <Container className=\"justify-content-center\">\n                        <Row >\n                            <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\n                                {isFavourite(verein._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                {isFavourite(verein._id)? 'Entfernen' : 'Merken'}\n                            </Button>\n                            <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\n                        </Row>\n                    </Container>\n                </Card.Body>\n              </Card>\n            </Popup>\n          </Marker>  \n        ))}\n        {merkFreiItems.map(garten => (\n                    <Marker\n                      key={garten._id}\n                      icon = {carrotIcon}\n                      position={[\n                        garten.kgv.geometry.coordinates[0],\n                        garten.kgv.geometry.coordinates[1]\n                      ]}\n                    >\n                      <Popup>\n                        <Card border=\"success\">\n                          <Card.Body className=\"mb-1 mt-1\"> \n                              <Card.Text className=\"mb-1 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{garten.kgv.kgvname}</Card.Text>\n                              <Card.Title className=\"mb-1 text-success\"><h4>{garten.titel}</h4></Card.Title>\n                              <Card.Text className=\"mb-1 mt-1 text-muted text-truncate\">{garten.beschreibung}</Card.Text>\n                              <Card.Subtitle className=\"mb-1 mt-1 text-success\"><h5>{garten.preis}â¬</h5></Card.Subtitle>\n                              <Row >\n                                  <NavLink to={`/frei/${garten._id}`}>\n                                      <Button size=\"sm\" className=\"mr-2 ml-3\" variant=\"outline-danger\">Details</Button>\n                                  </NavLink>\n                                  <Button onClick={() => merkFreiGarten(garten._id)} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                                  {isMerkFrei(garten._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                                  {isMerkFrei(garten._id) ? 'Entfernen' : 'Merken'}\n                        </Button>\n                                      <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>\n                              </Row>\n                          </Card.Body>\n                      </Card>\n                  </Popup>\n                    </Marker>\n                     ))}  \n      </MapContainer>\n    )\n}\n\nexport default FavoritenMap\n",["117","118"],"/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenFreiItem.js",["119"],"import React from 'react';\nimport {Container, Row, Col, Card, Button, ListGroup} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill, Envelope, Telephone, PersonCircle } from 'react-bootstrap-icons';\nimport {NavLink} from 'react-router-dom';\n\nfunction FavoritenFreiItem({merkClick, freigarten, merkFreiItems}) {\n\n\n    const isMerkFrei = () => {\n        return merkFreiItems.find((el) => el._id === freigarten._id) ? true : false\n    }\n\n    return (\n        <Container>\n                <Row>\n                <Card border=\"success\" className=\"mb-1\">\n                <ListGroup className=\"m=1\">\n                    <ListGroup.Item>\n                    <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\n                    <Card.Title>{freigarten.titel}</Card.Title>\n                    <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\n                    <h5 className=\"text-success\"><strong>{freigarten.preis}â¬</strong></h5>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Card.Subtitle className=\"mb-2\"><PersonCircle className=\"mr-3\"color=\"green\" size={17}/>{freigarten.name}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-3\" color=\"green\" size={17}/>{freigarten.email}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-3\" color=\"green\" size={17}/>{freigarten.telefon}</Card.Subtitle>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <NavLink to={`/frei/${freigarten._id}`}>\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\n                        </NavLink>\n                        <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isMerkFrei() ? 'Entfernen' : 'Merken'}\n                        </Button>\n                        <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button> \n                    </ListGroup.Item>\n                </ListGroup>\n                   {/*  <Card.Body className=\"m-1\">\n                        <Row>\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\n                        </Row>\n                        <Row>\n                            <Card.Title>{freigarten.titel}</Card.Title>\n                        </Row>\n                         <Row>\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\n                         </Row>\n                        <Row>\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}â¬</strong></h5>\n                        </Row>\n                        <Row>\n                        <Card.Subtitle className=\"mb-2\"><PersonCircle className=\"mr-3\"color=\"green\" size={17}/>{freigarten.name}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-3\" color=\"green\" size={17}/>{freigarten.email}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-3\" color=\"green\" size={17}/>{freigarten.telefon}</Card.Subtitle>\n                        </Row>\n                        <Row>\n                            <NavLink to={`/frei/${freigarten._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\n                            </NavLink>\n                            <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                            {isMerkFrei() ? 'Entfernen' : 'Merken'}\n                        </Button>\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>     \n                        </Row>\n                      \n                    </Card.Body> */}\n                </Card>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FavoritenFreiItem\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/AnzeigenItem.js",["120","121","122","123"],"import React, {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, PersonCircle, Telephone, Envelope, Heart, HeartFill } from 'react-bootstrap-icons';\n\n\n\n\nfunction AnzeigenItem({setMerkFrei, merkFrei, merkFreiItems}) {\n\n    const {id} = useParams ();\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [anzeige, setAnzeige] = useState([]);\n\n    const loadAnzeigeById = (searchQuery) => {\n        const API_URL = \"https://goschreber.herokuapp.com\"\n        const url = `${API_URL}/anzeigens/${id}`\n        setIsLoading(true);\n        setError(false);\n    \n        fetch(url)\n          .then((res) => {\n          \n          console.log(res);\n    \n            if (!res.ok) throw new Error(\"Oh noo\");\n            setIsLoading(false);\n            return res.json();\n          })\n          .then((json) => setAnzeige(json.data))\n          .catch((err) => setError(true));\n    \n      };\n    \n      useEffect(loadAnzeigeById, []);\n\n        console.log(anzeige)\n    \n    function merkFreiGarten(gartenid) {\n    \n        if (merkFrei.indexOf(gartenid) === -1){\n            setMerkFrei([\n            ...merkFrei,\n            gartenid\n            ])\n        } else {\n            \n            setMerkFrei(merkFrei.filter(item => item != gartenid))\n        }\n        }    \n      \n    const isMerkFrei = () => {\n        return merkFreiItems.find((el) => el._id === anzeige._id) ? true : false\n        }\n\n    return (\n            <Container fluid>\n                <Row className=\"justify-content-md-center mt-5\">\n                    <Col xs={6}>\n                        <Card border=\"success\" className=\"mb-1\">\n                            <Card.Body>\n                                    <Card.Img className=\"mb-3\" variant=\"top\" src=\"https://cdn.kiekmo.hamburg/vary/2020/02/listicle-kleingarten-lokstedt-shutterstock_437208574_content-728x410.jpg\" />\n                                    <Card.Title className=\"text-danger\"><h4>{anzeige.titel}</h4></Card.Title>\n                                    <Card.Text className=\"text-muted mb-3\">\n                                        <GeoAltFill className=\"mr-1\" color=\"green\" size={12}/> KGV \"{anzeige.kgv?.kgvname}\", {anzeige.kgv?.adresse.strasse}, {anzeige.kgv?.adresse.plz} Leipzig\n                                    </Card.Text>\n                                    <Card.Subtitle className=\"mb-3\">Beschreibung</Card.Subtitle>    \n                                    <Card.Text className=\"mb-3\">{anzeige.beschreibung}</Card.Text>\n                                    <Card.Subtitle className=\"mb-2\">Details</Card.Subtitle>\n                                    <Row>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">Preis:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.preis}â¬</Card.Text>\n                                        </Col>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">GartengrÃ¶Ãe:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.gartenqm}qm</Card.Text>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">JÃ¤hrliche Pachtkosten:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.pachtkosten}â¬</Card.Text>\n                                        </Col>\n                                        <Col xs={4}>\n                                            <Card.Text className=\"mb-1 text-muted\">VerfÃ¼gbar ab:</Card.Text>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <Card.Text className=\"mb-1\">{anzeige.verfÃ¼gbar}</Card.Text>\n                                        </Col>\n                                    </Row>\n                            </Card.Body>\n                        </Card>\n                            </Col>\n                       <Col xs={3}>\n                            <Row>\n                                <Card border=\"success\" style={{ width: '18rem' }} >\n                                 <Card.Body>\n                                 <Button onClick={() => merkFreiGarten(anzeige._id)} className=\"mr-2 \" variant='outline-danger' block>\n                                    {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={18}/> : <Heart className=\"mr-2\" color=\"red\" size={18}/>}\n                                    {isMerkFrei()? 'Entfernen' : 'Merken'}\n                                </Button>\n                                    <Button className=\"mr-1\" variant=\"outline-danger\" block>Teilen</Button>      \n                                    <Card.Subtitle className=\"mt-3 mb-2\"><PersonCircle className=\"mr-3\"color=\"green\" size={17}/>{anzeige.name}</Card.Subtitle>\n                                    <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-3\" color=\"green\" size={17}/>{anzeige.email}</Card.Subtitle>\n                                    <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-3\" color=\"green\" size={17}/>{anzeige.telefon}</Card.Subtitle>\n                                 </Card.Body>\n                                </Card>\n                            </Row>            \n                        </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AnzeigenItem\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/FavoritenVereinItem.js",["124"],"import React from 'react';\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\n\nfunction FavoritenVereinItem({favouritedItems, favClick, verein}) {\n\n    const web = verein.web\n    const email = verein.email\n  \n    const isFavourite = () => {\n      return favouritedItems.find((el) => el._id === verein._id) ? true : false\n    }\n\n\n    return (\n        <Card border=\"success\" className=\"mb-1\" >\n        <Card.Body >\n            <Card.Title>{verein.kgvname}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted text-truncate\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n            {email && <Card.Subtitle className=\"mb-2 text-muted text-truncate\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\n            {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted text-truncate\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\n            <Container className=\"justify-content-center\">\n                <Row >\n                    <Button onClick={favClick} size=\"sm\" className=\"mb-1 mr-1 \" variant='outline-danger'>\n                        {isFavourite()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\n                        {isFavourite()? 'Entfernen' : 'Merken'}\n                    </Button>\n                    <Button size=\"sm\" className=\"mb-1 mr-1\" variant=\"outline-danger\">Teilen</Button>\n                </Row>\n            </Container>\n          \n            \n        </Card.Body>\n    </Card>\n    )\n}\n\nexport default FavoritenVereinItem\n","/home/kathleen/Dokumente/CodingProjects/GOSCHREBER FrontandBack/final_project_goschreber/src/Components/VerwaltungsItem.js",["125","126","127"],"import React, {useState} from 'react';\nimport {Container, Col, Row, Card, Button, Image} from \"react-bootstrap\";\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\nimport axios from 'axios';\nimport {NavLink} from 'react-router-dom';\n\n\n\nfunction VerwaltungsItem({eigAnzeige, setOwnAnzeige, ownAnzeige}) {\n  \n\n    const id = eigAnzeige._id\n    const [deleted, setDeleted] = useState(false)\n    \n    \n    function handleDelete () {\n        axios\n        .delete('https://goschreber.herokuapp.com/anzeigens/'+id)\n        .then((res) => {console.log(res);\n                        setDeleted(true);\n        })\n      }\n    \n\n    return (\n        <Container>\n        <Row>\n            <Col>\n            {deleted?\n            <Card className=\"mb-1\" border=\"success\">\n                <Card.Body className=\"mt-1\">\n                        <Card.Title /* className=\"text-danger\" */><h4>Anzeige gelÃ¶scht</h4></Card.Title>\n                </Card.Body>\n            </Card>\n               :      \n            <Card border=\"success\" className=\"mb-1\">\n                <Card.Body className=\"m-1\">\n                    <Row>\n                    <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{eigAnzeige.kgv?.kgvname}</p>\n                    </Row>\n                    <Row>\n                        <Card.Title>{eigAnzeige.titel}</Card.Title>\n                    </Row>\n                    <Row>\n                        <p className=\"mb-2 text-muted row-3 text-truncate\">{eigAnzeige.beschreibung}</p>\n                    </Row>\n                    <Row>\n                        <h5 className=\"text-success\"><strong>{eigAnzeige.preis}â¬</strong></h5>\n                    </Row>\n                    <Row>\n                        <Button onClick={handleDelete} size=\"sm\" className=\"mr-2\" variant=\"danger\">LÃ¶schen</Button>\n                        <Button size=\"sm\" className=\"mr-2\" variant=\"success\">Bearbeiten</Button>\n                        <NavLink to={`/frei/${eigAnzeige._id}`}>\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-success\">Details</Button>\n                        </NavLink>\n                    </Row>\n                </Card.Body>\n            </Card>}\n        </Col>\n    </Row>\n</Container>\n    )\n}\n\nexport default VerwaltungsItem\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":18},{"ruleId":"132","severity":1,"message":"136","line":29,"column":10,"nodeType":"134","messageId":"135","endLine":29,"endColumn":19},{"ruleId":"132","severity":1,"message":"137","line":30,"column":10,"nodeType":"134","messageId":"135","endLine":30,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":96,"column":74,"nodeType":"140","messageId":"141","endLine":96,"endColumn":76},{"ruleId":"138","severity":1,"message":"139","line":118,"column":52,"nodeType":"140","messageId":"141","endLine":118,"endColumn":54},{"ruleId":"138","severity":1,"message":"139","line":122,"column":76,"nodeType":"140","messageId":"141","endLine":122,"endColumn":78},{"ruleId":"138","severity":1,"message":"139","line":142,"column":46,"nodeType":"140","messageId":"141","endLine":142,"endColumn":48},{"ruleId":"138","severity":1,"message":"139","line":146,"column":73,"nodeType":"140","messageId":"141","endLine":146,"endColumn":75},{"ruleId":"132","severity":1,"message":"142","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"143","line":1,"column":26,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"144","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":15},{"ruleId":"132","severity":1,"message":"145","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":23},{"ruleId":"132","severity":1,"message":"146","line":7,"column":9,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":18},{"ruleId":"132","severity":1,"message":"147","line":9,"column":25,"nodeType":"134","messageId":"135","endLine":9,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":29,"column":54,"nodeType":"140","messageId":"141","endLine":29,"endColumn":56},{"ruleId":"132","severity":1,"message":"148","line":2,"column":44,"nodeType":"134","messageId":"135","endLine":2,"endColumn":55},{"ruleId":"132","severity":1,"message":"149","line":2,"column":57,"nodeType":"134","messageId":"135","endLine":2,"endColumn":61},{"ruleId":"132","severity":1,"message":"150","line":2,"column":63,"nodeType":"134","messageId":"135","endLine":2,"endColumn":74},{"ruleId":"132","severity":1,"message":"151","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"142","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":15,"column":60,"nodeType":"140","messageId":"141","endLine":15,"endColumn":62},{"ruleId":"132","severity":1,"message":"153","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"154","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"132","severity":1,"message":"147","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"142","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"143","line":1,"column":26,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"153","line":2,"column":9,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"147","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":26,"column":48,"nodeType":"140","messageId":"141","endLine":26,"endColumn":50},{"ruleId":"132","severity":1,"message":"147","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"142","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"147","line":5,"column":25,"nodeType":"134","messageId":"135","endLine":5,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":24,"column":56,"nodeType":"140","messageId":"141","endLine":24,"endColumn":58},{"ruleId":"138","severity":1,"message":"139","line":52,"column":52,"nodeType":"140","messageId":"141","endLine":52,"endColumn":54},{"ruleId":"128","replacedBy":"155"},{"ruleId":"130","replacedBy":"156"},{"ruleId":"132","severity":1,"message":"147","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"136","line":12,"column":12,"nodeType":"134","messageId":"135","endLine":12,"endColumn":21},{"ruleId":"132","severity":1,"message":"137","line":13,"column":12,"nodeType":"134","messageId":"135","endLine":13,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":36,"column":34,"nodeType":"159","endLine":36,"endColumn":36,"suggestions":"160"},{"ruleId":"138","severity":1,"message":"139","line":49,"column":54,"nodeType":"140","messageId":"141","endLine":49,"endColumn":56},{"ruleId":"132","severity":1,"message":"147","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"161","line":2,"column":44,"nodeType":"134","messageId":"135","endLine":2,"endColumn":49},{"ruleId":"132","severity":1,"message":"162","line":3,"column":22,"nodeType":"134","messageId":"135","endLine":3,"endColumn":27},{"ruleId":"132","severity":1,"message":"163","line":3,"column":29,"nodeType":"134","messageId":"135","endLine":3,"endColumn":38},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Favourites' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'KgvItem' is defined but never used.","'useLocalStorage' is defined but never used.","'CopyToClipboard' is defined but never used.","'Col' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavLink' is defined but never used.","Expected '===' and instead saw '=='.","'Container' is defined but never used.","'Row' is defined but never used.",["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'Image' is defined but never used.","'Heart' is defined but never used.","'HeartFill' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [id]",{"range":"169","text":"170"},[1092,1094],"[id]"]