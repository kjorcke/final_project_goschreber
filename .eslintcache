[{"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js":"1","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js":"2","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js":"3","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js":"4","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js":"5","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js":"6","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js":"7","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Verwaltung.js":"8","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js":"9","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js":"10","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js":"11","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js":"12","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js":"13","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js":"14","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js":"15"},{"size":530,"mtime":1613222510349,"results":"16","hashOfConfig":"17"},{"size":5599,"mtime":1613390882165,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1613222510349,"results":"19","hashOfConfig":"17"},{"size":1366,"mtime":1613222510357,"results":"20","hashOfConfig":"17"},{"size":2583,"mtime":1613242457724,"results":"21","hashOfConfig":"17"},{"size":1746,"mtime":1613382554303,"results":"22","hashOfConfig":"17"},{"size":7291,"mtime":1613297688950,"results":"23","hashOfConfig":"17"},{"size":302,"mtime":1613222510285,"results":"24","hashOfConfig":"17"},{"size":2315,"mtime":1613318040178,"results":"25","hashOfConfig":"17"},{"size":222,"mtime":1613222510277,"results":"26","hashOfConfig":"17"},{"size":343,"mtime":1613242353283,"results":"27","hashOfConfig":"17"},{"size":1756,"mtime":1613391868010,"results":"28","hashOfConfig":"17"},{"size":1394,"mtime":1613222510293,"results":"29","hashOfConfig":"17"},{"size":1576,"mtime":1613325429138,"results":"30","hashOfConfig":"17"},{"size":4139,"mtime":1613390686408,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"f22ymv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js",[],["66","67"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js",["68","69","70","71","72","73","74"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js",["75","76","77","78","79","80","81","82"],"import React, {useState, useEffect} from \"react\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport KgvItem from \"./KgvItem\";\r\nimport useLocalStorage from '../useLocalStorage';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Favourites from \"./Favourites\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nfunction Map({kgvs, favouriteGarden, favouritedItems}) {\r\n\r\n\r\n  const position = [51.330743159430824, 12.36348580378971]\r\n  const carrotIcon = L.icon({\r\n    iconUrl: carrot,\r\n    iconSize:     [38, 38], // size of the icon\r\n    shadowSize:   [50, 64], // size of the shadow\r\n    iconAnchor:   [19, 38],\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [0, -38]\r\n  });\r\n  \r\n\r\n    return (\r\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n              <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n            {kgvs.map(verein => (\r\n                <Marker\r\n                  key={verein._id}\r\n                  icon = {carrotIcon}\r\n                  position={[\r\n                    verein.geometry.coordinates[0],\r\n                    verein.geometry.coordinates[1]\r\n                  ]}\r\n                >\r\n                  <Popup>\r\n                    <Card className=\"mb-1\" style={{ width: '15rem' }}>\r\n                      <Card.Body>\r\n                          <Card.Title>{verein.kgvname}</Card.Title>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\r\n                          <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\r\n                          <CopyToClipboard text={verein.email}>\r\n                              <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\r\n                          </CopyToClipboard>\r\n                       </Card.Body>\r\n                    </Card>\r\n                  </Popup>\r\n                </Marker>  \r\n              ))}\r\n            </MapContainer>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js",["83","84","85"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js",["86","87"],"import React, {useState} from 'react';\r\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\r\n\r\n\r\n/* \r\nconst [gartenId, setGartenId] = useState(\"\"); */\r\n    \r\nfunction handleSelect(e){\r\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\r\n\r\n    const kgv = (verein.map(el => el._id))\r\n    \r\n    setAnzeige({...anzeige, kgv:kgv})\r\n }\r\n\r\n\r\n\r\n/*\r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n*/\r\n\r\nreturn (\r\n   \r\n     <Container>\r\n            <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={8}>\r\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\r\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\r\n                                <h5 className=\"mb-3\">\r\n                                   Anzeigendetails\r\n                                </h5>\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Titel der Anzeige</Form.Label>\r\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Beschreibung</Form.Label>\r\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\r\n                                   </Form.Group>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Preis</Form.Label>\r\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Jährliche Pachtkosten</Form.Label>\r\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                \r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Größe</Form.Label>\r\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Verfügbar ab</Form.Label>\r\n                                                        <Form.Control value={anzeige.verfügbar} onChange={(e) => setAnzeige({...anzeige, verfügbar:e.target.value})}type=\"text\" name=\"verfügbar\"  as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                    <Form.Label>Kleingartenverein</Form.Label>\r\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \r\n                                                    as=\"select\">\r\n                                                    <option>bitte auswählen</option>\r\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <h5 className=\"mb-3\">\r\n                                                    Anbieterdetails\r\n                                                </h5>\r\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Name</Form.Label>\r\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                <Button variant=\"success\" type=\"submit\">\r\n                                                Anzeige aufgeben\r\n                                                </Button>\r\n                                                \r\n                                </Form>\r\n                            </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Inserieren\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Verwaltung.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js",["88","89","90","91"],"import { divIcon } from \"leaflet\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport FreiItem from \"./FreiItem\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n\r\n    \r\nfunction FreieGaerten({gaerten}) {\r\n\r\n\r\n  \r\n\r\n    const position = [51.330743159430824, 12.36348580378971]\r\n    const carrotIcon = L.icon({\r\n      iconUrl: carrot,\r\n      iconSize:     [38, 38], // size of the icon\r\n      shadowSize:   [50, 64], // size of the shadow\r\n      iconAnchor:   [19, 38],\r\n      shadowAnchor: [4, 62],  // the same for the shadow\r\n      popupAnchor:  [0, -38]\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={8}>\r\n                <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\r\n                  <TileLayer\r\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                {gaerten.map(garten => (\r\n                    <Marker\r\n                      key={garten._id}\r\n                      icon = {carrotIcon}\r\n                      position={[\r\n                        garten.kgv.geometry.coordinates[0],\r\n                        garten.kgv.geometry.coordinates[1]\r\n                      ]}\r\n                    >\r\n                      <Popup>\r\n                        <Card className=\"mb-1\" style={{ width: '15rem' }}>\r\n                          <Card.Body>\r\n                              <Card.Title>{garten.kgv.kgvname}</Card.Title>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Popup>\r\n                    </Marker>  \r\n                  ))}\r\n                </MapContainer>\r\n            </Col>\r\n            <Col>\r\n              <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n                {gaerten.map(freigarten=> <FreiItem freigarten={freigarten} key={freigarten._id}/>)}\r\n              </Scrollbars>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FreieGaerten\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js",["92","93","94"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js",["95","96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":24,"column":10,"nodeType":"104","messageId":"105","endLine":24,"endColumn":19},{"ruleId":"102","severity":1,"message":"107","line":25,"column":10,"nodeType":"104","messageId":"105","endLine":25,"endColumn":15},{"ruleId":"102","severity":1,"message":"108","line":29,"column":9,"nodeType":"104","messageId":"105","endLine":29,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":90,"column":74,"nodeType":"111","messageId":"112","endLine":90,"endColumn":76},{"ruleId":"109","severity":1,"message":"110","line":112,"column":52,"nodeType":"111","messageId":"112","endLine":112,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":116,"column":74,"nodeType":"111","messageId":"112","endLine":116,"endColumn":76},{"ruleId":"102","severity":1,"message":"113","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"114","line":1,"column":26,"nodeType":"104","messageId":"105","endLine":1,"endColumn":35},{"ruleId":"102","severity":1,"message":"115","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":15},{"ruleId":"102","severity":1,"message":"116","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"117","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"118","line":9,"column":9,"nodeType":"104","messageId":"105","endLine":9,"endColumn":18},{"ruleId":"102","severity":1,"message":"119","line":9,"column":20,"nodeType":"104","messageId":"105","endLine":9,"endColumn":23},{"ruleId":"102","severity":1,"message":"120","line":9,"column":25,"nodeType":"104","messageId":"105","endLine":9,"endColumn":28},{"ruleId":"102","severity":1,"message":"121","line":2,"column":44,"nodeType":"104","messageId":"105","endLine":2,"endColumn":55},{"ruleId":"102","severity":1,"message":"122","line":2,"column":57,"nodeType":"104","messageId":"105","endLine":2,"endColumn":61},{"ruleId":"102","severity":1,"message":"123","line":2,"column":63,"nodeType":"104","messageId":"105","endLine":2,"endColumn":74},{"ruleId":"102","severity":1,"message":"113","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"109","severity":1,"message":"124","line":15,"column":60,"nodeType":"111","messageId":"112","endLine":15,"endColumn":62},{"ruleId":"102","severity":1,"message":"125","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":24},{"ruleId":"102","severity":1,"message":"114","line":2,"column":26,"nodeType":"104","messageId":"105","endLine":2,"endColumn":35},{"ruleId":"102","severity":1,"message":"126","line":3,"column":36,"nodeType":"104","messageId":"105","endLine":3,"endColumn":42},{"ruleId":"102","severity":1,"message":"120","line":2,"column":25,"nodeType":"104","messageId":"105","endLine":2,"endColumn":28},{"ruleId":"102","severity":1,"message":"127","line":11,"column":10,"nodeType":"104","messageId":"105","endLine":11,"endColumn":16},{"ruleId":"102","severity":1,"message":"128","line":11,"column":18,"nodeType":"104","messageId":"105","endLine":11,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":12,"column":12,"nodeType":"104","messageId":"105","endLine":12,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":13,"column":12,"nodeType":"104","messageId":"105","endLine":13,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":36,"column":34,"nodeType":"131","endLine":36,"endColumn":36,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'KgvItem' is defined but never used.","'useLocalStorage' is defined but never used.","'Favourites' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","Expected '===' and instead saw '=='.","'divIcon' is defined but never used.","'Button' is defined but never used.","'merken' is assigned a value but never used.","'setMerken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [id]",{"range":"138","text":"139"},[1071,1073],"[id]"]