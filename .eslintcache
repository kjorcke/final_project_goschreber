[{"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js":"1","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js":"2","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js":"3","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js":"4","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js":"5","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js":"6","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js":"7","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js":"8","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js":"9","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js":"10","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js":"11","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js":"12","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js":"13","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js":"14","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenMap.js":"15","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenVereinItem.js":"16","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenFreiItem.js":"17"},{"size":621,"mtime":1613579147104,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1613222510349,"results":"20","hashOfConfig":"19"},{"size":8685,"mtime":1613583067410,"results":"21","hashOfConfig":"19"},{"size":1366,"mtime":1613222510357,"results":"22","hashOfConfig":"19"},{"size":4030,"mtime":1613558473410,"results":"23","hashOfConfig":"19"},{"size":222,"mtime":1613222510277,"results":"24","hashOfConfig":"19"},{"size":3791,"mtime":1613558577829,"results":"25","hashOfConfig":"19"},{"size":5408,"mtime":1613561117222,"results":"26","hashOfConfig":"19"},{"size":343,"mtime":1613242353283,"results":"27","hashOfConfig":"19"},{"size":1936,"mtime":1613581886099,"results":"28","hashOfConfig":"19"},{"size":7241,"mtime":1613491764801,"results":"29","hashOfConfig":"19"},{"size":2112,"mtime":1613583715002,"results":"30","hashOfConfig":"19"},{"size":2385,"mtime":1613577570828,"results":"31","hashOfConfig":"19"},{"size":2221,"mtime":1613581907263,"results":"32","hashOfConfig":"19"},{"size":6387,"mtime":1613582899659,"results":"33","hashOfConfig":"19"},{"size":1830,"mtime":1613421017281,"results":"34","hashOfConfig":"19"},{"size":2187,"mtime":1613422385781,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"f22ymv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\index.js",[],["79","80"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\reportWebVitals.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\App.js",["81","82","83","84","85","86","87","88"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\useLocalStorage.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Map.js",["89","90","91","92","93","94","95","96"],"import React, {useState, useEffect} from \"react\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport KgvItem from \"./KgvItem\";\r\nimport useLocalStorage from '../useLocalStorage';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Favourites from \"./Favourites\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nfunction Map({kgvs, favourites, favouritedItems, setFavourites}) {\r\n\r\n  \r\n  function favouriteGarden(gardenid) {\r\n  \r\n      console.log(gardenid)\r\n      console.log(favourites.indexOf(gardenid))\r\n  \r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n    }\r\n\r\n    const isFavourite = (gartenid) => {\r\n      return favouritedItems.find((el) => el._id === gartenid) ? true : false\r\n    }\r\n    \r\n    const web = (website) => {\r\n      return website ? true : false\r\n    }\r\n\r\n    const email = (emailadresse) => {\r\n      return emailadresse ? true : false\r\n    }\r\n\r\n  const position = [51.330743159430824, 12.36348580378971]\r\n  const carrotIcon = L.icon({\r\n    iconUrl: carrot,\r\n    iconSize:     [38, 38], // size of the icon\r\n    shadowSize:   [50, 64], // size of the shadow\r\n    iconAnchor:   [19, 38],\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [0, -38]\r\n  });\r\n  \r\n\r\n\r\n    return (\r\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n              <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n            {kgvs.map(verein => (\r\n                <Marker\r\n                  key={verein._id}\r\n                  icon = {carrotIcon}\r\n                  position={[\r\n                    verein.geometry.coordinates[0],\r\n                    verein.geometry.coordinates[1]\r\n                  ]}\r\n                >\r\n                  <Popup >\r\n                    <Card border=\"success\" style={{ width: '19rem' }} >\r\n                      <Card.Body >\r\n                          <Card.Title>{verein.kgvname}</Card.Title>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n                          {email(verein.email) && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\r\n                          {web(verein.web) && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\r\n                          <Container className=\"justify-content-center\">\r\n                              <Row >\r\n                                  <Button onClick={() => favouriteGarden(verein._id)} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\r\n                                      {isFavourite(verein._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\r\n                                      {isFavourite(verein._id)? 'Entfernen' : 'Merken'}\r\n                                  </Button>\r\n                                  <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\r\n                              </Row>\r\n                          </Container>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Popup>\r\n                </Marker>  \r\n              ))}\r\n            </MapContainer>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Layout.js",[],["97","98"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreieGaerten.js",["99","100","101","102","103"],"import React, {useState, useEffect} from \"react\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\r\n\r\n    \r\nfunction FreieGaerten({gaerten, ownAnzeige, setMerkFrei, merkFrei, merkFreiItems}) {\r\n\r\n  \r\n  function merkFreiGarten(gartenid) {\r\n\r\n    console.log(gartenid)\r\n    console.log(merkFrei.indexOf(gartenid))\r\n    console.log(ownAnzeige)\r\n\r\n    if (merkFrei.indexOf(gartenid) === -1){\r\n      setMerkFrei([\r\n        ...merkFrei,\r\n        gartenid\r\n      ])\r\n    } else {\r\n      \r\n      setMerkFrei(merkFrei.filter(item => item != gartenid))\r\n    }\r\n  }\r\n\r\n  const isMerkFrei = (freiId) => {\r\n    return merkFreiItems.find((el) => el._id === freiId) ? true : false\r\n  }\r\n  \r\n\r\n    const position = [51.330743159430824, 12.36348580378971]\r\n    const carrotIcon = L.icon({\r\n      iconUrl: carrot,\r\n      iconSize:     [38, 38], // size of the icon\r\n      shadowSize:   [50, 64], // size of the shadow\r\n      iconAnchor:   [19, 38],\r\n      shadowAnchor: [4, 62],  // the same for the shadow\r\n      popupAnchor:  [0, -38]\r\n    });\r\n\r\n    return (\r\n                <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\r\n                  <TileLayer\r\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                {gaerten.map(garten => (\r\n                    <Marker\r\n                      key={garten._id}\r\n                      icon = {carrotIcon}\r\n                      position={[\r\n                        garten.kgv.geometry.coordinates[0],\r\n                        garten.kgv.geometry.coordinates[1]\r\n                      ]}\r\n                    >\r\n                      <Popup>\r\n                          <Card border=\"success\" style={{ width: '19rem' }}>\r\n                            <Card.Body className=\"mb-1\"> \r\n                                <Card.Text className=\"mb-1 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{garten.kgv.kgvname}</Card.Text>\r\n                                <Card.Title className=\"mb-1 text-success\"><h4>{garten.titel}</h4></Card.Title>\r\n                                <Card.Text className=\"mb-1 mt-1 text-muted text-truncate\">{garten.beschreibung}</Card.Text>\r\n                                <Card.Subtitle className=\"mb-1 mt-1 text-success\"><h5>{garten.preis}€</h5></Card.Subtitle>\r\n                                <Row >\r\n                                    <NavLink to={`/frei/${garten._id}`}>\r\n                                        <Button size=\"sm\" className=\"mr-2 ml-3\" variant=\"outline-danger\">Details</Button>\r\n                                    </NavLink>\r\n                                    <Button onClick={() => merkFreiGarten(garten._id)} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\r\n                                    {isMerkFrei(garten._id)? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\r\n                                    {isMerkFrei(garten._id)? 'Entfernen' : 'Merken'}\r\n                          </Button>\r\n                                        <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                  </Popup>\r\n                    </Marker>  \r\n                  ))}\r\n                </MapContainer>\r\n    )\r\n}\r\n\r\nexport default FreieGaerten\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\AnzeigenItem.js",["104","105","106"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, PersonCircle, Telephone, Envelope } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\n\r\nfunction AnzeigenItem() {\r\n\r\n    const {id} = useParams ();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [anzeige, setAnzeige] = useState([]);\r\n\r\n    const loadAnzeigeById = (searchQuery) => {\r\n        const API_URL = \"https://goschreber.herokuapp.com\"\r\n        const url = `${API_URL}/anzeigens/${id}`\r\n        setIsLoading(true);\r\n        setError(false);\r\n    \r\n        fetch(url)\r\n          .then((res) => {\r\n          \r\n          console.log(res);\r\n    \r\n            if (!res.ok) throw new Error(\"Oh noo\");\r\n            setIsLoading(false);\r\n            return res.json();\r\n          })\r\n          .then((json) => setAnzeige(json.data))\r\n          .catch((err) => setError(true));\r\n    \r\n      };\r\n    \r\n      useEffect(loadAnzeigeById, []);\r\n\r\n        console.log(anzeige)\r\n\r\n    return (\r\n            <Container fluid>\r\n                <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={6}>\r\n                        <Card border=\"success\" className=\"mb-1\">\r\n                            <Card.Body>\r\n                                    <Card.Img className=\"mb-3\" variant=\"top\" src=\"https://cdn.kiekmo.hamburg/vary/2020/02/listicle-kleingarten-lokstedt-shutterstock_437208574_content-728x410.jpg\" />\r\n                                    <Card.Title className=\"text-danger\"><h4>{anzeige.titel}</h4></Card.Title>\r\n                                    <Card.Text className=\"text-muted mb-3\">\r\n                                        <GeoAltFill className=\"mr-1\" color=\"green\" size={12}/> KGV \"{anzeige.kgv?.kgvname}\", {anzeige.kgv?.adresse.strasse}, {anzeige.kgv?.adresse.plz} Leipzig\r\n                                    </Card.Text>\r\n                                    <Card.Subtitle className=\"mb-3\">Beschreibung</Card.Subtitle>    \r\n                                    <Card.Text className=\"mb-3\">{anzeige.beschreibung}</Card.Text>\r\n                                    <Card.Subtitle className=\"mb-2\">Details</Card.Subtitle>\r\n                                    <Row>\r\n                                        <Col xs={4}>\r\n                                            <Card.Text className=\"mb-1 text-muted\">Preis:</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={2}>\r\n                                            <Card.Text className=\"mb-1\">{anzeige.preis}€</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Card.Text className=\"mb-1 text-muted\">Gartengröße:</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={2}>\r\n                                            <Card.Text className=\"mb-1\">{anzeige.gartenqm}qm</Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={4}>\r\n                                            <Card.Text className=\"mb-1 text-muted\">Jährliche Pachtkosten:</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={2}>\r\n                                            <Card.Text className=\"mb-1\">{anzeige.pachtkosten}€</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Card.Text className=\"mb-1 text-muted\">Verfügbar ab:</Card.Text>\r\n                                        </Col>\r\n                                        <Col xs={2}>\r\n                                            <Card.Text className=\"mb-1\">{anzeige.verfügbar}</Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                            </Col>\r\n                       <Col xs={3}>\r\n                            <Row>\r\n                                <Card border=\"success\" style={{ width: '18rem' }} >\r\n                                 <Card.Body>\r\n                                    <Button className=\"mr-1\" variant=\"outline-danger\" block>Merken</Button>\r\n                                    <Button className=\"mr-1\" variant=\"outline-danger\" block>Teilen</Button>      \r\n                                    <Card.Subtitle className=\"mt-3 mb-2\"><PersonCircle className=\"mr-3\"color=\"green\" size={17}/>{anzeige.name}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-3\" color=\"green\" size={17}/>{anzeige.email}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-3\" color=\"green\" size={17}/>{anzeige.telefon}</Card.Subtitle>\r\n                                 </Card.Body>\r\n                                </Card>\r\n                            </Row>            \r\n                        </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnzeigenItem\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Favourites.js",[],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\KgvItem.js",["107"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Inserieren.js",["108","109"],"import React, {useState} from 'react';\r\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\r\n\r\n\r\n/* \r\nconst [gartenId, setGartenId] = useState(\"\"); */\r\n    \r\nfunction handleSelect(e){\r\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\r\n\r\n    const kgv = (verein.map(el => el._id))\r\n    \r\n    setAnzeige({...anzeige, kgv:kgv})\r\n }\r\n\r\n\r\n\r\n/*\r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n*/\r\n\r\nreturn (\r\n   \r\n     <Container>\r\n            <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={8}>\r\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\r\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\r\n                                <h5 className=\"mb-3\">\r\n                                   Anzeigendetails\r\n                                </h5>\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Titel der Anzeige</Form.Label>\r\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Beschreibung</Form.Label>\r\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\r\n                                   </Form.Group>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Preis</Form.Label>\r\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Jährliche Pachtkosten</Form.Label>\r\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                \r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Größe</Form.Label>\r\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Verfügbar ab</Form.Label>\r\n                                                        <Form.Control value={anzeige.verfügbar} onChange={(e) => setAnzeige({...anzeige, verfügbar:e.target.value})}type=\"text\" name=\"verfügbar\"  as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                    <Form.Label>Kleingartenverein</Form.Label>\r\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \r\n                                                    as=\"select\">\r\n                                                    <option>bitte auswählen</option>\r\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <h5 className=\"mb-3\">\r\n                                                    Anbieterdetails\r\n                                                </h5>\r\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Name</Form.Label>\r\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                <Button variant=\"success\" type=\"submit\">\r\n                                                Anzeige aufgeben\r\n                                                </Button>\r\n                                                \r\n                                </Form>\r\n                            </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Inserieren\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\Header.js",["110","111","112","113"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\VerwaltungsItem.js",["114","115","116"],"import React, {useState} from 'react';\r\nimport {Container, Col, Row, Card, Button, Image} from \"react-bootstrap\";\r\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\r\nimport axios from 'axios';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction VerwaltungsItem({eigAnzeige, setOwnAnzeige, ownAnzeige}) {\r\n  \r\n\r\n    const id = eigAnzeige._id\r\n    const [deleted, setDeleted] = useState(false)\r\n    \r\n    \r\n    function handleDelete () {\r\n        axios\r\n        .delete('https://goschreber.herokuapp.com/anzeigens/'+id)\r\n        .then((res) => {console.log(res);\r\n                        setDeleted(true);\r\n        })\r\n      }\r\n    \r\n\r\n    return (\r\n        <Container>\r\n        <Row>\r\n            <Col>\r\n            {deleted?\r\n            <Card className=\"mb-1\" border=\"success\">\r\n                <Card.Body className=\"mt-1\">\r\n                        <Card.Title /* className=\"text-danger\" */><h4>Anzeige gelöscht</h4></Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n               :      \r\n            <Card border=\"success\" className=\"mb-1\">\r\n                <Card.Body className=\"m-1\">\r\n                    <Row>\r\n                    <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{eigAnzeige.kgv?.kgvname}</p>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card.Title>{eigAnzeige.titel}</Card.Title>\r\n                    </Row>\r\n                    <Row>\r\n                        <p className=\"mb-2 text-muted row-3 text-truncate\">{eigAnzeige.beschreibung}</p>\r\n                    </Row>\r\n                    <Row>\r\n                        <h5 className=\"text-success\"><strong>{eigAnzeige.preis}€</strong></h5>\r\n                    </Row>\r\n                    <Row>\r\n                        <Button onClick={handleDelete} size=\"sm\" className=\"mr-2\" variant=\"danger\">Löschen</Button>\r\n                        <Button size=\"sm\" className=\"mr-2\" variant=\"success\">Bearbeiten</Button>\r\n                        <NavLink to={`/frei/${eigAnzeige._id}`}>\r\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-success\">Details</Button>\r\n                        </NavLink>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>}\r\n        </Col>\r\n    </Row>\r\n</Container>\r\n    )\r\n}\r\n\r\nexport default VerwaltungsItem\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FreiItem.js",["117"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenMap.js",["118","119","120","121"],"C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenVereinItem.js",["122"],"import React from 'react';\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Envelope, Globe2, Heart, HeartFill } from 'react-bootstrap-icons';\r\n\r\nfunction FavoritenVereinItem({favouritedItems, favClick, verein}) {\r\n\r\n    const web = verein.web\r\n    const email = verein.email\r\n  \r\n    const isFavourite = () => {\r\n      return favouritedItems.find((el) => el._id === verein._id) ? true : false\r\n    }\r\n\r\n\r\n    return (\r\n        <Card border=\"success\" className=\"mb-1\" >\r\n        <Card.Body >\r\n            <Card.Title>{verein.kgvname}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n            {email && <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>}\r\n            {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\r\n            <Container className=\"justify-content-center\">\r\n                <Row >\r\n                    <Button onClick={favClick} size=\"sm\" className=\"m-1 \" variant='outline-danger'>\r\n                        {isFavourite()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\r\n                        {isFavourite()? 'Entfernen' : 'Merken'}\r\n                    </Button>\r\n                    <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\r\n                </Row>\r\n            </Container>\r\n          \r\n            \r\n        </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default FavoritenVereinItem\r\n","C:\\Users\\Kathleen\\Documents\\GartenNeu\\goschreber-front\\src\\Components\\FavoritenFreiItem.js",["123"],"import React from 'react';\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Heart, HeartFill } from 'react-bootstrap-icons';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction FavoritenFreiItem({merkClick, freigarten, merkFreiItems}) {\r\n\r\n\r\n    const isMerkFrei = () => {\r\n        return merkFreiItems.find((el) => el._id === freigarten._id) ? true : false\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n                <Row>\r\n                <Card border=\"success\" className=\"mb-1\">\r\n                    <Card.Body className=\"m-1\">\r\n                        <Row>\r\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\r\n                        </Row>\r\n                        <Row>\r\n                            <Card.Title>{freigarten.titel}</Card.Title>\r\n                        </Row>\r\n                         <Row>\r\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\r\n                         </Row>\r\n                        <Row>\r\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}€</strong></h5>\r\n                        </Row>\r\n    \r\n                        <Row>\r\n                            <NavLink to={`/frei/${freigarten._id}`}>\r\n                                <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Details</Button>\r\n                            </NavLink>\r\n                            <Button onClick={merkClick} size=\"sm\" className=\"mr-2 \" variant='outline-danger'>\r\n                            {isMerkFrei()? <HeartFill className=\"mr-2\" color=\"red\" size={17}/> : <Heart className=\"mr-2\" color=\"red\" size={17}/>}\r\n                            {isMerkFrei() ? 'Entfernen' : 'Merken'}\r\n                        </Button>\r\n                            <Button size=\"sm\" className=\"mr-2\" variant=\"outline-danger\">Teilen</Button>     \r\n                        </Row>\r\n                      \r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FavoritenFreiItem\r\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"132","line":29,"column":10,"nodeType":"130","messageId":"131","endLine":29,"endColumn":19},{"ruleId":"128","severity":1,"message":"133","line":30,"column":10,"nodeType":"130","messageId":"131","endLine":30,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":96,"column":74,"nodeType":"136","messageId":"137","endLine":96,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":118,"column":52,"nodeType":"136","messageId":"137","endLine":118,"endColumn":54},{"ruleId":"134","severity":1,"message":"135","line":122,"column":76,"nodeType":"136","messageId":"137","endLine":122,"endColumn":78},{"ruleId":"134","severity":1,"message":"135","line":142,"column":46,"nodeType":"136","messageId":"137","endLine":142,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":146,"column":73,"nodeType":"136","messageId":"137","endLine":146,"endColumn":75},{"ruleId":"128","severity":1,"message":"138","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"139","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"140","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":15},{"ruleId":"128","severity":1,"message":"141","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":23},{"ruleId":"128","severity":1,"message":"142","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":18},{"ruleId":"128","severity":1,"message":"143","line":9,"column":25,"nodeType":"130","messageId":"131","endLine":9,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":29,"column":54,"nodeType":"136","messageId":"137","endLine":29,"endColumn":56},{"ruleId":"124","replacedBy":"144"},{"ruleId":"126","replacedBy":"145"},{"ruleId":"128","severity":1,"message":"138","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"139","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"146","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"143","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":26,"column":48,"nodeType":"136","messageId":"137","endLine":26,"endColumn":50},{"ruleId":"128","severity":1,"message":"132","line":12,"column":12,"nodeType":"130","messageId":"131","endLine":12,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":13,"column":12,"nodeType":"130","messageId":"131","endLine":13,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":36,"column":34,"nodeType":"149","endLine":36,"endColumn":36,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"143","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"128","severity":1,"message":"138","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"134","severity":1,"message":"151","line":15,"column":60,"nodeType":"136","messageId":"137","endLine":15,"endColumn":62},{"ruleId":"128","severity":1,"message":"152","line":2,"column":44,"nodeType":"130","messageId":"131","endLine":2,"endColumn":55},{"ruleId":"128","severity":1,"message":"153","line":2,"column":57,"nodeType":"130","messageId":"131","endLine":2,"endColumn":61},{"ruleId":"128","severity":1,"message":"154","line":2,"column":63,"nodeType":"130","messageId":"131","endLine":2,"endColumn":74},{"ruleId":"128","severity":1,"message":"155","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"156","line":2,"column":44,"nodeType":"130","messageId":"131","endLine":2,"endColumn":49},{"ruleId":"128","severity":1,"message":"157","line":3,"column":22,"nodeType":"130","messageId":"131","endLine":3,"endColumn":27},{"ruleId":"128","severity":1,"message":"158","line":3,"column":29,"nodeType":"130","messageId":"131","endLine":3,"endColumn":38},{"ruleId":"128","severity":1,"message":"143","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"128","severity":1,"message":"138","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"143","line":5,"column":25,"nodeType":"130","messageId":"131","endLine":5,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":24,"column":56,"nodeType":"136","messageId":"137","endLine":24,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":52,"column":52,"nodeType":"136","messageId":"137","endLine":52,"endColumn":54},{"ruleId":"128","severity":1,"message":"143","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"128","severity":1,"message":"143","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Favourites' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'KgvItem' is defined but never used.","'useLocalStorage' is defined but never used.","'CopyToClipboard' is defined but never used.","'Col' is defined but never used.",["159"],["160"],"'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["161"],"Expected '===' and instead saw '=='.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavLink' is defined but never used.","'Image' is defined but never used.","'Heart' is defined but never used.","'HeartFill' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [id]",{"range":"164","text":"165"},[1071,1073],"[id]"]