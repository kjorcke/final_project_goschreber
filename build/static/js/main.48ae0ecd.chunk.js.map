{"version":3,"sources":["assets/carrot.png","Components/KgvItem.js","useLocalStorage.js","Components/Favourites.js","Components/Map.js","Components/Header.js","Components/FreiItem.js","Components/FreieGaerten.js","Components/Inserieren.js","Components/VerwaltungsItem.js","Components/Verwaltung.js","Components/AnzeigenItem.js","App.js","reportWebVitals.js","index.js"],"names":["KgvItem","favouritedItems","verein","favClick","useState","web","isFavourite","find","el","_id","Card","border","className","Body","Title","kgvname","Subtitle","color","size","adresse","strasse","plz","stadt","email","href","Container","Row","Button","onClick","variant","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Favourite","Map","kgvs","carrotIcon","favouriteGarden","L","icon","iconUrl","carrot","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","Marker","position","geometry","coordinates","Popup","style","width","text","backgroundColor","Header","fluid","Col","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","eventKey","FreiItem","freigarten","to","kgv","titel","beschreibung","preis","FreieGaerten","gaerten","xs","garten","height","Inserieren","anzeige","setAnzeige","handleSubmit","Form","onSubmit","Group","controlId","Label","Control","onChange","e","target","type","name","as","rows","pachtkosten","gartenqm","verf√ºgbar","filter","telefon","VerwaltungsItem","axios","delete","then","res","data","handleDelete","Verwaltung","userAnzeigen","AnzeigenItem","useParams","setIsLoading","setError","useEffect","searchQuery","fetch","ok","Error","json","catch","err","Img","src","Text","block","App","setKgvs","setGaerten","gartemqm","ownAnzeige","setOwnAnzeige","useHistory","indexOf","favourites","setFavourites","gardenid","exact","path","preventDefault","post","Favourites","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ae0ecd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/carrot.21d529a5.png\";","import React, {useState} from 'react';\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, Envelope, Globe2 } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\n\r\n\r\nfunction KgvItem({favouritedItems, verein, favClick}) {\r\n\r\n  const [merken, setMerken] = useState(false)  \r\n  const web = verein.web\r\n\r\n  const isFavourite = () => {\r\n    return favouritedItems.find((el) => el._id === verein._id) ? true : false\r\n  }\r\n\r\n    return (\r\n        <Card border=\"success\" className=\"mb-1\" >\r\n            <Card.Body >\r\n                <Card.Title>{verein.kgvname}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-2\"color=\"green\" size={17}/>{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{verein.email}</Card.Subtitle>\r\n                {web && <Card.Subtitle href={verein.web} className=\"mb-3 text-muted\"><Globe2 className=\"mr-2\" color=\"green\" size={17} /><a className=\"mb-3 text-muted\" href={verein.web}>{verein.web}</a></Card.Subtitle>}\r\n                <Container className=\"justify-content-center\">\r\n                    <Row >\r\n                        <Button onClick={favClick} size=\"sm\" className=\"m-1 \" variant={isFavourite() ? 'danger' : 'outline-danger'}>\r\n                            {isFavourite() ? 'Entfernen' : 'Merken'}\r\n                        </Button>\r\n                        <Button size=\"sm\" className=\"m-1\" variant=\"outline-danger\">Teilen</Button>\r\n                    </Row>\r\n                </Container>\r\n              \r\n                \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default KgvItem\r\n","import {useState} from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }\r\n\r\n export default useLocalStorage; ","import React from 'react';\r\n\r\n\r\n\r\nfunction Favourite({verein}) {\r\n\r\n   \r\n    \r\n\r\n    return (\r\n        \r\n        <div className=\"favouritecard\">\r\n            \r\n            <div>{verein.kgvname}</div>\r\n            <div>{verein.adresse.strasse}</div>\r\n            <div>{verein.email}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourite\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport KgvItem from \"./KgvItem\";\r\nimport useLocalStorage from '../useLocalStorage';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Favourites from \"./Favourites\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\nfunction Map({kgvs, favouriteGarden, favouritedItems}) {\r\n\r\n\r\n  const position = [51.330743159430824, 12.36348580378971]\r\n  const carrotIcon = L.icon({\r\n    iconUrl: carrot,\r\n    iconSize:     [38, 38], // size of the icon\r\n    shadowSize:   [50, 64], // size of the shadow\r\n    iconAnchor:   [19, 38],\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [0, -38]\r\n  });\r\n  \r\n\r\n    return (\r\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\r\n              <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n            {kgvs.map(verein => (\r\n                <Marker\r\n                  key={verein._id}\r\n                  icon = {carrotIcon}\r\n                  position={[\r\n                    verein.geometry.coordinates[0],\r\n                    verein.geometry.coordinates[1]\r\n                  ]}\r\n                >\r\n                  <Popup>\r\n                    <Card className=\"mb-1\" style={{ width: '15rem' }}>\r\n                      <Card.Body>\r\n                          <Card.Title>{verein.kgvname}</Card.Title>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\r\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\r\n                          <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\r\n                          <CopyToClipboard text={verein.email}>\r\n                              <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\r\n                          </CopyToClipboard>\r\n                       </Card.Body>\r\n                    </Card>\r\n                  </Popup>\r\n                </Marker>  \r\n              ))}\r\n            </MapContainer>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport { Container, Col, Row, Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction Header() {\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n            <Navbar expand=\"xl\">\r\n            <Navbar.Brand href=\"/\"><h4 className=\"text-danger\"><strong>GO SCHREBER</strong></h4></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\" >\r\n                <Nav>\r\n                    <Nav.Item  className=\"ml-6\">\r\n                        <Nav.Link eventKey=\"home\" href=\"/\"><Button variant=\"success\">Vereine</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link eventKey=\"frei\" href=\"/frei\"><Button variant=\"success\">Freie G√§rten</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/inserieren\"><Button variant=\"success\">Anzeige aufgeben</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/verwalten\"><Button variant=\"success\">Anzeigen verwalten</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item className=\"ml-6\">\r\n                        <Nav.Link href=\"/merken\"><Button variant=\"success\">Merkliste</Button></Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n       \r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {Container, Row, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill } from 'react-bootstrap-icons';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction FreiItem({freigarten}) {\r\n    return (\r\n        <NavLink to={`/frei/${freigarten._id}`}>\r\n            <Container>\r\n                <Row>\r\n                <Card border=\"success\" className=\"mb-1\">\r\n                    <Card.Body className=\"m-1\">\r\n                        <Row>\r\n                        <p className=\"mb-2 text-muted\"><GeoAltFill className=\"mr-1\" color=\"green\" size={12}/>{freigarten.kgv.kgvname}</p>\r\n                        </Row>\r\n                        <Row>\r\n                            <Card.Title>{freigarten.titel}</Card.Title>\r\n                        </Row>\r\n                         <Row>\r\n                            <p className=\"mb-2 text-muted row-3 text-truncate\">{freigarten.beschreibung}</p>\r\n                         </Row>\r\n                        <Row>\r\n                            <h5 className=\"text-success\"><strong>{freigarten.preis}‚Ç¨</strong></h5>\r\n                        </Row>\r\n                         <Row >\r\n                            <Button size=\"sm\" className=\"mr-1\" variant=\"outline-danger\">Merken</Button>\r\n                            <Button size=\"sm\" className=\"mr-1\" variant=\"outline-danger\">Teilen</Button>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </Container>\r\n        </NavLink>\r\n        \r\n      \r\n    )\r\n}\r\n\r\nexport default FreiItem\r\n","import { divIcon } from \"leaflet\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\r\nimport FreiItem from \"./FreiItem\";\r\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport  carrot from '../assets/carrot.png';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n\r\n    \r\nfunction FreieGaerten({gaerten}) {\r\n\r\n\r\n  \r\n\r\n    const position = [51.330743159430824, 12.36348580378971]\r\n    const carrotIcon = L.icon({\r\n      iconUrl: carrot,\r\n      iconSize:     [38, 38], // size of the icon\r\n      shadowSize:   [50, 64], // size of the shadow\r\n      iconAnchor:   [19, 38],\r\n      shadowAnchor: [4, 62],  // the same for the shadow\r\n      popupAnchor:  [0, -38]\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={8}>\r\n                <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\r\n                  <TileLayer\r\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                {gaerten.map(garten => (\r\n                    <Marker\r\n                      key={garten._id}\r\n                      icon = {carrotIcon}\r\n                      position={[\r\n                        garten.kgv.geometry.coordinates[0],\r\n                        garten.kgv.geometry.coordinates[1]\r\n                      ]}\r\n                    >\r\n                      <Popup>\r\n                        <Card className=\"mb-1\" style={{ width: '15rem' }}>\r\n                          <Card.Body>\r\n                              <Card.Title>{garten.kgv.kgvname}</Card.Title>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Popup>\r\n                    </Marker>  \r\n                  ))}\r\n                </MapContainer>\r\n            </Col>\r\n            <Col>\r\n              <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n                {gaerten.map(freigarten=> <FreiItem freigarten={freigarten} key={freigarten._id}/>)}\r\n              </Scrollbars>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FreieGaerten\r\n","import React, {useState} from 'react';\r\nimport {Card, Container, Row, Col, Form, Button} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Inserieren({kgvs, anzeige, setAnzeige, handleSubmit}) {\r\n\r\n\r\n/* \r\nconst [gartenId, setGartenId] = useState(\"\"); */\r\n    \r\nfunction handleSelect(e){\r\n    const verein = (kgvs.filter((verein) => verein.kgvname == e.target.value))\r\n\r\n    const kgv = (verein.map(el => el._id))\r\n    \r\n    setAnzeige({...anzeige, kgv:kgv})\r\n }\r\n\r\n\r\n\r\n/*\r\n      if (favourites.indexOf(gardenid) === -1){\r\n        setFavourites([\r\n          ...favourites,\r\n          gardenid\r\n        ])\r\n      } else {\r\n        \r\n        setFavourites(favourites.filter(item => item != gardenid))\r\n      }\r\n*/\r\n\r\nreturn (\r\n   \r\n     <Container>\r\n            <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={8}>\r\n                       <Card  border=\"success\" className=\"justify-content-md-center\" >\r\n                                <Form onSubmit={handleSubmit} className=\"m-3\" >\r\n                                <h5 className=\"mb-3\">\r\n                                   Anzeigendetails\r\n                                </h5>\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Titel der Anzeige</Form.Label>\r\n                                    <Form.Control value={anzeige.titel} onChange={(e) => setAnzeige({...anzeige, titel:e.target.value})} type=\"text\" name=\"titel\"  as=\"textarea\" rows={1} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                        <Form.Label>Beschreibung</Form.Label>\r\n                                    <Form.Control value={anzeige.beschreibung} onChange={(e) => setAnzeige({...anzeige, beschreibung:e.target.value})} type=\"text\" name=\"beschreibung\" as=\"textarea\" rows={3} />\r\n                                   </Form.Group>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Preis</Form.Label>\r\n                                                        <Form.Control value={anzeige.preis} onChange={(e) => setAnzeige({...anzeige, preis:e.target.value})}type=\"text\" name=\"preis\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>J√§hrliche Pachtkosten</Form.Label>\r\n                                                        <Form.Control value={anzeige.pachtkosten} onChange={(e) => setAnzeige({...anzeige, pachtkosten:e.target.value})}type=\"text\" name=\"pachtkosten\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                \r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Gr√∂√üe</Form.Label>\r\n                                                        <Form.Control value={anzeige.gartenqm} onChange={(e) => setAnzeige({...anzeige, gartenqm:e.target.value})}type=\"text\" name=\"gartenqm\" as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>Verf√ºgbar ab</Form.Label>\r\n                                                        <Form.Control value={anzeige.verf√ºgbar} onChange={(e) => setAnzeige({...anzeige, verf√ºgbar:e.target.value})}type=\"text\" name=\"verf√ºgbar\"  as=\"textarea\" rows={1} />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                    <Form.Label>Kleingartenverein</Form.Label>\r\n                                                    <Form.Control onChange={handleSelect} type=\"\" name=\"kgvname\" \r\n                                                    as=\"select\">\r\n                                                    <option>bitte ausw√§hlen</option>\r\n                                                    {kgvs.map(verein => <option>{verein.kgvname}</option>)}\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <h5 className=\"mb-3\">\r\n                                                    Anbieterdetails\r\n                                                </h5>\r\n                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Name</Form.Label>\r\n                                                    <Form.Control value={anzeige.name} onChange={(e) => setAnzeige({...anzeige, name:e.target.value})} type=\"text\" name=\"name\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control value={anzeige.email} onChange={(e) => setAnzeige({...anzeige, email:e.target.value})} type=\"text\" name=\"email\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                 <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                                    <Form.Control value={anzeige.telefon} onChange={(e) => setAnzeige({...anzeige, telefon:e.target.value})} type=\"text\" name=\"telefon\"  as=\"textarea\" rows={1} />\r\n                                                 </Form.Group>\r\n                                                <Button variant=\"success\" type=\"submit\">\r\n                                                Anzeige aufgeben\r\n                                                </Button>\r\n                                                \r\n                                </Form>\r\n                            </Card>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Inserieren\r\n","import React from 'react';\r\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nfunction VerwaltungsItem({anzeige}) {\r\n\r\n    const id = anzeige._id\r\n    console.log(id)\r\n\r\n    function handleDelete(id){\r\n        axios\r\n        .delete('http://localhost:5000/anzeigens/'+id)\r\n        .then(res => console.log(res.data))\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card className=\"mb-1\" style={{ width: '25rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>{anzeige.titel}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{anzeige.beschreibung}</Card.Subtitle>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{anzeige.preis}‚Ç¨</Card.Subtitle>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{anzeige.gartenqm}qm</Card.Subtitle> \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                <Button onClick={() => handleDelete(anzeige._id)} variant=\"success\">L√∂schen</Button>\r\n                <Button /* onClick={handleEdit} */ variant=\"success\">Bearbeiten</Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default VerwaltungsItem\r\n","import React from 'react';\r\nimport VerwaltungsItem from \"./VerwaltungsItem\"\r\n\r\nfunction Verwaltung({userAnzeigen}) {\r\n    return (\r\n        <div>\r\n             {userAnzeigen.map(anzeige => <VerwaltungsItem anzeige={anzeige} key={anzeige._id}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Verwaltung\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Container, Col, Row, Card, Button} from \"react-bootstrap\";\r\nimport { GeoAltFill, PersonCircle, Telephone, Envelope } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\n\r\nfunction AnzeigenItem() {\r\n\r\n    const {id} = useParams ();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [anzeige, setAnzeige] = useState([]);\r\n\r\n    const loadAnzeigeById = (searchQuery) => {\r\n        const API_URL = \"https://goschreber.herokuapp.com\"\r\n        const url = `${API_URL}/anzeigens/${id}`\r\n        setIsLoading(true);\r\n        setError(false);\r\n    \r\n        fetch(url)\r\n          .then((res) => {\r\n          \r\n          console.log(res);\r\n    \r\n            if (!res.ok) throw new Error(\"Oh noo\");\r\n            setIsLoading(false);\r\n            return res.json();\r\n          })\r\n          .then((json) => setAnzeige(json.data))\r\n          .catch((err) => setError(true));\r\n    \r\n      };\r\n    \r\n      useEffect(loadAnzeigeById, []);\r\n\r\n        console.log(anzeige)\r\n\r\n    return (\r\n            <Container fluid>\r\n                <Row className=\"justify-content-md-center mt-5\">\r\n                    <Col xs={6}>\r\n                        <Card border=\"success\" className=\"mb-1\">\r\n                            <Card.Body>\r\n                                    <Card.Img className=\"mb-3\" variant=\"top\" src=\"https://cdn.kiekmo.hamburg/vary/2020/02/listicle-kleingarten-lokstedt-shutterstock_437208574_content-728x410.jpg\" />\r\n                                    <Card.Title className=\"text-danger\"><h4>{anzeige.titel}</h4></Card.Title>\r\n                                    <Card.Text className=\"text-muted mb-3\">\r\n                                        <GeoAltFill className=\"mr-1\" color=\"green\" size={12}/> KGV \"{anzeige.kgv?.kgvname}\", {anzeige.kgv?.adresse.strasse}, {anzeige.kgv?.adresse.plz} Leipzig\r\n                                    </Card.Text>\r\n                                    <Card.Subtitle className=\"mb-3\">Beschreibung</Card.Subtitle>    \r\n                                    <Card.Text className=\"mb-3\">{anzeige.beschreibung}</Card.Text>\r\n                                    <Card.Subtitle className=\"mb-2\">Details</Card.Subtitle>\r\n                                    <Card.Text className=\"mb-1\">Preis:{anzeige.preis}‚Ç¨</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">Gartengr√∂√üe: {anzeige.gartenqm}qm</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">J√§hrliche Pachtkosten: {anzeige.pachtkosten}‚Ç¨</Card.Text>\r\n                                    <Card.Text className=\"mb-1\">Verf√ºgbar ab: {anzeige.verf√ºgbar}</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                       <Col xs={3}>\r\n                            <Row className=\"mb-1\">\r\n                                <Button className=\"mr-1\" variant=\"outline-danger\" block>Merken</Button>\r\n                            </Row>\r\n                            <Row className=\"mb-1\">\r\n                                <Button className=\"mr-1\" variant=\"outline-danger\" block>Teilen</Button> \r\n                            </Row>\r\n                            <Row>\r\n                                <Card border=\"success\" className=\"mb-1\" >\r\n                                 <Card.Body >\r\n                                    <Card.Subtitle className=\"mb-2\"><PersonCircle className=\"mr-2\"color=\"green\" size={17}/>{anzeige.name}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Envelope className=\"mr-2\" color=\"green\" size={17}/>{anzeige.email}</Card.Subtitle>\r\n                                    <Card.Subtitle className=\"mb-2\"><Telephone className=\"mr-2\" color=\"green\" size={17}/>{anzeige.telefon}</Card.Subtitle>\r\n                                 </Card.Body>\r\n                                </Card>\r\n                            </Row>            \r\n                        </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnzeigenItem\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Map from \"./Components/Map\";\r\nimport Header from \"./Components/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Col, Row,} from 'react-bootstrap';\r\nimport Layout from './Components/Layout';\r\nimport FreieGaerten from './Components/FreieGaerten';\r\nimport Inserieren from './Components/Inserieren';\r\nimport Verwaltung from './Components/Verwaltung';\r\nimport KgvItem from './Components/KgvItem';\r\nimport Favourites from './Components/Favourites';\r\nimport AnzeigenItem from './Components/AnzeigenItem';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useLocalStorage from './useLocalStorage';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nfunction App() {\r\n  \r\n  const [kgvs, setKgvs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [gaerten, setGaerten] = useState([]);\r\n  const [anzeige, setAnzeige] = useState({titel:'', beschreibung:'', kgv:'', pachtkosten:'', preis:'', verf√ºgbar:'', gartemqm:'', name:'', email:'', telefon:''})\r\n  const [ownAnzeige, setOwnAnzeige] = useLocalStorage('anzeigen', []);\r\n  const history = useHistory();\r\n  \r\n\r\n  const loadKgvs = (searchQuery) => {\r\n    const API_URL = \"https://goschreber.herokuapp.com\"\r\n    const url = `${API_URL}/kgvs`\r\n    setIsLoading(true);\r\n    setError(false);\r\n\r\n    fetch(url)\r\n      .then((res) => {\r\n      \r\n      console.log(res);\r\n\r\n        if (!res.ok) throw new Error(\"Oh noo\");\r\n        setIsLoading(false);\r\n        return res.json();\r\n      })\r\n      .then((json) => setKgvs(json.data))\r\n      .catch((err) => setError(true));\r\n\r\n  };\r\n\r\n    useEffect(loadKgvs, []);\r\n  \r\n  \r\n  const loadGaerten = (searchQuery) => {\r\n      const API_URL = \"https://goschreber.herokuapp.com\"\r\n      const url = `${API_URL}/anzeigens`\r\n      setIsLoading(true);\r\n      setError(false);\r\n  \r\n      fetch(url)\r\n        .then((res) => {\r\n        \r\n        console.log(res);\r\n  \r\n          if (!res.ok) throw new Error(\"Oh noo\");\r\n          setIsLoading(false);\r\n          return res.json();\r\n        })\r\n        .then((json) => setGaerten(json.data))\r\n        .catch((err) => setError(true));\r\n        };\r\n\r\n      useEffect(loadGaerten, []);\r\n/* //////////////////////////// ANZEIGEN IN LOCAL STORAGE///////////////////////////////////// */\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n        .post(\"https://goschreber.herokuapp.com/anzeigens\", anzeige)\r\n        .then((res) => {\r\n            const {_id} = res.data.data;\r\n            setOwnAnzeige([\r\n                ...ownAnzeige,\r\n                _id\r\n            ]);\r\n            \r\n            /* history.push('/frei') */\r\n        })  \r\n  }\r\n  const userAnzeigen = gaerten.filter(({_id}) => ownAnzeige.indexOf(_id) != -1)\r\n\r\n  /* ////////////////////////////////////////////////////////////////////////////////////////// */\r\n\r\n\r\n  /* ///////////////////// SETTING FAVOURITES IN LOCAL STORAGE /////////////////////*/\r\n  /* ////////////////////////////////////////////////////////////////////////////////*/\r\n\r\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\r\n  \r\nfunction favouriteGarden(gardenid) {\r\n\r\n    console.log(gardenid)\r\n    console.log(favourites.indexOf(gardenid))\r\n\r\n    if (favourites.indexOf(gardenid) === -1){\r\n      setFavourites([\r\n        ...favourites,\r\n        gardenid\r\n      ])\r\n    } else {\r\n      \r\n      setFavourites(favourites.filter(item => item != gardenid))\r\n    }\r\n  }\r\n\r\n  const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\r\n  console.log(favouritedItems)\r\n\r\n/*/////////////////////////////////////////////////////////////////////////////////////////////*/\r\n\r\n\r\n  return (\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Container fluid>\r\n              <Row>\r\n                <Col xs={9}>\r\n                  <Map kgvs={kgvs}/>\r\n                </Col>\r\n                <Col>\r\n                  <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n                    {kgvs.map(verein => <KgvItem favouritedItems={favouritedItems} favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\r\n                 </Scrollbars>\r\n                </Col>\r\n              </Row>\r\n            </Container> \r\n          </Route>\r\n          <Route exact path=\"/frei\"> \r\n            <FreieGaerten gaerten= {gaerten} kgvs={kgvs}/>\r\n          </Route>\r\n          <Route path=\"/frei/:id\"> \r\n            <AnzeigenItem />\r\n          </Route>\r\n          <Route exact path=\"/inserieren\"> \r\n            <Inserieren handleSubmit={handleSubmit} anzeige={anzeige} setAnzeige={setAnzeige} gaerten= {gaerten} kgvs={kgvs}/>\r\n          </Route>\r\n          <Route exact path=\"/verwalten\"> \r\n            <Verwaltung userAnzeigen={userAnzeigen} gaerten= {gaerten} kgvs={kgvs}/>\r\n          </Route>\r\n          <Route exact path=\"/merken\"> \r\n                <h2>Favourite List</h2>\r\n              <CopyToClipboard text={favouritedItems.map(el => el.email)}>\r\n                <button>clipboard all email addresses</button>\r\n              </CopyToClipboard>\r\n              {favouritedItems.map(verein => <Favourites favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\r\n          </Route>\r\n        </Switch>  \r\n      </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}