{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kathleen/Schreibtisch/gardenfinder/src/Components/FreieGaerten.js\",\n    _s = $RefreshSig$();\n\nimport { divIcon } from \"leaflet\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport FreiItem from \"./FreiItem\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport carrot from '../assets/carrot.png';\n\nfunction FreieGaerten() {\n  _s();\n\n  const [gaerten, setGaerten] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const loadGaerten = searchQuery => {\n    const API_URL = \"https://goschreber.herokuapp.com\";\n    const url = `${API_URL}/anzeigens`;\n    setIsLoading(true);\n    setError(false);\n    fetch(url).then(res => {\n      console.log(res);\n      if (!res.ok) throw new Error(\"Oh noo\");\n      setIsLoading(false);\n      return res.json();\n    }).then(json => setGaerten(json.data)).catch(err => setError(true));\n  };\n\n  useEffect(loadGaerten, []);\n  console.log(gaerten);\n  const position = [51.330743159430824, 12.36348580378971];\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize: [38, 38],\n    // size of the icon\n    shadowSize: [50, 64],\n    // size of the shadow\n    iconAnchor: [19, 38],\n    shadowAnchor: [4, 62],\n    // the same for the shadow\n    popupAnchor: [0, -38]\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: position,\n          zoom: 13,\n          scrollWheelZoom: false,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), gaerten.map(garten => /*#__PURE__*/_jsxDEV(Marker, {\n            icon: carrotIcon,\n            position: [garten.kgv.geometry.coordinates[0], garten.kgv.geometry.coordinates[1]],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"mb-1\",\n                style: {\n                  width: '15rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: garten.kgv.kgvname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, garten.kgv._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: gaerten.map(freigarten => /*#__PURE__*/_jsxDEV(FreiItem, {\n          freigarten: freigarten\n        }, freigarten._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FreieGaerten, \"OtURvjsuddjaRcR85u2ynq5UffQ=\");\n\n_c = FreieGaerten;\nexport default FreieGaerten;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreieGaerten\");","map":{"version":3,"sources":["/home/kathleen/Schreibtisch/gardenfinder/src/Components/FreieGaerten.js"],"names":["divIcon","React","useState","useEffect","Container","Row","Col","Card","Button","FreiItem","MapContainer","TileLayer","Marker","Popup","L","carrot","FreieGaerten","gaerten","setGaerten","isLoading","setIsLoading","error","setError","loadGaerten","searchQuery","API_URL","url","fetch","then","res","console","log","ok","Error","json","data","catch","err","position","carrotIcon","icon","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","map","garten","kgv","geometry","coordinates","width","kgvname","_id","freigarten"],"mappings":"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","sourcesContent":["import { divIcon } from \"leaflet\";\nimport React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\nimport FreiItem from \"./FreiItem\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\n\n\n    \nfunction FreieGaerten() {\n\n\n    const [gaerten, setGaerten] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n  \n    const loadGaerten = (searchQuery) => {\n      const API_URL = \"https://goschreber.herokuapp.com\"\n      const url = `${API_URL}/anzeigens`\n      setIsLoading(true);\n      setError(false);\n  \n      fetch(url)\n        .then((res) => {\n        \n        console.log(res);\n  \n          if (!res.ok) throw new Error(\"Oh noo\");\n          setIsLoading(false);\n          return res.json();\n        })\n        .then((json) => setGaerten(json.data))\n        .catch((err) => setError(true));\n\n    };\n  \n      useEffect(loadGaerten, []);\n\n      console.log(gaerten)\n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n\n      return (\n        <Container>\n          <Row>\n            <Col>\n            <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n              <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n            {gaerten.map(garten => (\n                <Marker\n                  key={garten.kgv._id}\n                  icon = {carrotIcon}\n                  position={[\n                    garten.kgv.geometry.coordinates[0],\n                    garten.kgv.geometry.coordinates[1]\n                  ]}\n                >\n                  <Popup>\n                    <Card className=\"mb-1\" style={{ width: '15rem' }}>\n                      <Card.Body>\n                          <Card.Title>{garten.kgv.kgvname}</Card.Title>\n                       </Card.Body>\n                    </Card>\n                  </Popup>\n                </Marker>  \n              ))}\n            </MapContainer>\n            </Col>\n            <Col>\n            {gaerten.map(freigarten=> <FreiItem freigarten={freigarten} key={freigarten._id}/>)}\n            </Col>\n          </Row>\n        </Container>\n    )\n}\n\nexport default FreieGaerten\n"]},"metadata":{},"sourceType":"module"}