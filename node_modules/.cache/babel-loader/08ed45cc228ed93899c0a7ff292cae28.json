{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\n\nfunction FreieGaerten() {\n  _s();\n\n  const [gaerten, setGaerten] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const loadGaerten = searchQuery => {\n    const API_URL = \"https://goschreber.herokuapp.com\";\n    const url = `${API_URL}/anzeigens`;\n    setIsLoading(true);\n    setError(false);\n    fetch(url).then(res => {\n      console.log(res);\n      if (!res.ok) throw new Error(\"Oh noo\");\n      setIsLoading(false);\n      return res.json();\n    }).then(json => setGaerten(json.data)).catch(err => setError(true));\n    console.log(gaerten);\n  };\n\n  useEffect(loadGaerten, []);\n  return hello\n  /* {g}\n  <Card className=\"mb-1\" style={{ width: '15rem' }}>\n  <Card.Body>\n      <Card.Title>{verein.kgvname}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n      <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\n      <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\n      <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\n      <CopyToClipboard text={verein.email}>\n          <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\n      </CopyToClipboard>\n  </Card.Body>\n  </Card> */\n  ;\n}\n\n_s(FreieGaerten, \"OtURvjsuddjaRcR85u2ynq5UffQ=\");\n\n_c = FreieGaerten;\nexport default FreieGaerten;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreieGaerten\");","map":{"version":3,"sources":["/home/kathleen/Schreibtisch/gardenfinder/src/Components/FreieGaerten.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","Button","FreieGaerten","gaerten","setGaerten","isLoading","setIsLoading","error","setError","loadGaerten","searchQuery","API_URL","url","fetch","then","res","console","log","ok","Error","json","data","catch","err","hello"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAgD,iBAAhD;;AAKA,SAASC,YAAT,GAAwB;AAAA;;AAGpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMc,WAAW,GAAIC,WAAD,IAAiB;AACnC,UAAMC,OAAO,GAAG,kCAAhB;AACA,UAAMC,GAAG,GAAI,GAAED,OAAQ,YAAvB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAAS;AAEfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEE,UAAI,CAACA,GAAG,CAACG,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACbb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,aAAOS,GAAG,CAACK,IAAJ,EAAP;AACD,KARH,EASGN,IATH,CASSM,IAAD,IAAUhB,UAAU,CAACgB,IAAI,CAACC,IAAN,CAT5B,EAUGC,KAVH,CAUUC,GAAD,IAASf,QAAQ,CAAC,IAAD,CAV1B;AAYEQ,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACH,GAnBD;;AAqBEP,EAAAA,SAAS,CAACa,WAAD,EAAc,EAAd,CAAT;AAEA,SACEe;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdM;AAgBL;;GA9CQtB,Y;;KAAAA,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\n\n\n\n    \nfunction FreieGaerten() {\n\n\n    const [gaerten, setGaerten] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n  \n    const loadGaerten = (searchQuery) => {\n      const API_URL = \"https://goschreber.herokuapp.com\"\n      const url = `${API_URL}/anzeigens`\n      setIsLoading(true);\n      setError(false);\n  \n      fetch(url)\n        .then((res) => {\n        \n        console.log(res);\n  \n          if (!res.ok) throw new Error(\"Oh noo\");\n          setIsLoading(false);\n          return res.json();\n        })\n        .then((json) => setGaerten(json.data))\n        .catch((err) => setError(true));\n\n        console.log(gaerten)\n    };\n  \n      useEffect(loadGaerten, []);\n    \n      return (\n        hello\n        /* {g}\n        <Card className=\"mb-1\" style={{ width: '15rem' }}>\n        <Card.Body>\n            <Card.Title>{verein.kgvname}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n            <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\n            <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\n            <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\n            <CopyToClipboard text={verein.email}>\n                <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\n            </CopyToClipboard>\n        </Card.Body>\n    </Card> */\n    )\n}\n\nexport default FreieGaerten\n"]},"metadata":{},"sourceType":"module"}