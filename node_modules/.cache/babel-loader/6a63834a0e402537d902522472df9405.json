{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kathleen/Schreibtisch/gardenfinder/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\n\nfunction Map() {\n  _s();\n\n  const [kgvs, setKgvs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n\n  const loadKgvs = searchQuery => {\n    const API_URL = \"https://goschreber.herokuapp.com\";\n    const url = `${API_URL}/kgvs`;\n    setIsLoading(true);\n    setError(false);\n    fetch(url).then(res => {\n      console.log(res);\n      if (!res.ok) throw new Error(\"Oh noo\");\n      setIsLoading(false);\n      return res.json();\n    }).then(json => setKgvs(json.data)).catch(err => setError(true));\n  };\n\n  useEffect(loadKgvs, []);\n\n  function favouriteGarden(gardenid) {\n    console.log(gardenid);\n    console.log(favourites.indexOf(gardenid));\n\n    if (favourites.indexOf(gardenid) === -1) {\n      setFavourites([...favourites, gardenid]);\n    } else {\n      setFavourites(favourites.filter(item => item != gardenid));\n    }\n  } //console.log(favourites)\n\n\n  const position = [51.330743159430824, 12.36348580378971];\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize: [38, 38],\n    // size of the icon\n    shadowSize: [50, 64],\n    // size of the shadow\n    iconAnchor: [19, 38],\n    shadowAnchor: [4, 62],\n    // the same for the shadow\n    popupAnchor: [0, -38]\n  });\n  const favouritedItems = kgvs.filter(({\n    _id\n  }) => favourites.indexOf(_id) != -1);\n  console.log(favouritedItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maincontainer\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), kgvs.map(verein => /*#__PURE__*/_jsxDEV(Marker, {\n        icon: carrotIcon,\n        position: [verein.geometry.coordinates[0], verein.geometry.coordinates[1]],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: verein.kgvname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: verein.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, verein._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kgvlist\",\n      children: kgvs.map(verein => /*#__PURE__*/_jsxDEV(KgvItem, {\n        favClick: () => favouriteGarden(verein._id),\n        verein: verein\n      }, verein._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favouriteList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favourite List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: favouritedItems.map(el => el.email),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"clipboard all email addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), favouritedItems.map(verein => /*#__PURE__*/_jsxDEV(Favourites, {\n        favClick: () => favouriteGarden(verein._id),\n        verein: verein\n      }, verein._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"LKzefs5Uz5jlSQVQQGvLSZhyoJ4=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/kathleen/Schreibtisch/gardenfinder/src/Components/Map.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","carrot","KgvItem","useLocalStorage","CopyToClipboard","Favourites","Map","kgvs","setKgvs","isLoading","setIsLoading","error","setError","favourites","setFavourites","loadKgvs","searchQuery","API_URL","url","fetch","then","res","console","log","ok","Error","json","data","catch","err","favouriteGarden","gardenid","indexOf","filter","item","position","carrotIcon","icon","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","favouritedItems","_id","map","verein","geometry","coordinates","kgvname","email","el"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\"\n\n\n\nfunction Map() {\n\n    const [kgvs, setKgvs] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [favourites, setFavourites] = useLocalStorage('favourite', []);\n  \n    const loadKgvs = (searchQuery) => {\n      const API_URL = \"https://goschreber.herokuapp.com\"\n      const url = `${API_URL}/kgvs`\n      setIsLoading(true);\n      setError(false);\n  \n      fetch(url)\n        .then((res) => {\n        \n        console.log(res);\n  \n          if (!res.ok) throw new Error(\"Oh noo\");\n          setIsLoading(false);\n          return res.json();\n        })\n        .then((json) => setKgvs(json.data))\n        .catch((err) => setError(true));\n  \n    };\n  \n      useEffect(loadKgvs, []);\n      \n      \n  \n      function favouriteGarden(gardenid) {\n  \n        console.log(gardenid)\n        console.log(favourites.indexOf(gardenid))\n  \n        if (favourites.indexOf(gardenid) === -1){\n          setFavourites([\n            ...favourites,\n            gardenid\n          ])\n        } else {\n          \n          setFavourites(favourites.filter(item => item != gardenid))\n        }\n          \n  \n  \n      }\n    //console.log(favourites)\n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n  \n    const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\n    console.log(favouritedItems)\n  \n\n    return (\n    <div className=\"maincontainer\">\n      <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n      <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n    {kgvs.map(verein => (\n        <Marker\n          key={verein._id}\n          icon = {carrotIcon}\n          position={[\n            verein.geometry.coordinates[0],\n            verein.geometry.coordinates[1]\n          ]}\n        >\n          <Popup>\n          <div>\n            <h2>{verein.kgvname}</h2>\n            <p>{verein.email}</p>\n          </div>\n          </Popup>\n        </Marker>  \n      ))}\n    </MapContainer>\n     <div className=\"kgvlist\">\n      {kgvs.map(verein => <KgvItem favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)} \n     </div>\n     <div className=\"favouriteList\">\n      <h2>Favourite List</h2>\n      <CopyToClipboard text={favouritedItems.map(el => el.email)}>\n        <button>clipboard all email addresses</button>\n      </CopyToClipboard>\n      {favouritedItems.map(verein => <Favourites favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\n     </div>\n    </div>\n   \n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}