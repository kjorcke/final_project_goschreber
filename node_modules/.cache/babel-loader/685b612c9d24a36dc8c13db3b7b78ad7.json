{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kathleen/Schreibtisch/gardenfinder/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\n\nfunction Map({\n  kgvs\n}) {\n  _s();\n\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n  const position = [51.330743159430824, 12.36348580378971];\n  const carrotIcon = L.icon({\n    iconUrl: carrot,\n    iconSize: [38, 38],\n    // size of the icon\n    shadowSize: [50, 64],\n    // size of the shadow\n    iconAnchor: [19, 38],\n    shadowAnchor: [4, 62],\n    // the same for the shadow\n    popupAnchor: [0, -38]\n  });\n\n  function favouriteGarden(gardenid) {\n    console.log(gardenid);\n    console.log(favourites.indexOf(gardenid));\n\n    if (favourites.indexOf(gardenid) === -1) {\n      setFavourites([...favourites, gardenid]);\n    } else {\n      setFavourites(favourites.filter(item => item != gardenid));\n    }\n  }\n\n  const favouritedItems = kgvs.filter(({\n    _id\n  }) => favourites.indexOf(_id) != -1);\n  console.log(favouritedItems);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: position,\n          zoom: 13,\n          scrollWheelZoom: false,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), kgvs.map(verein => /*#__PURE__*/_jsxDEV(Marker, {\n            icon: carrotIcon,\n            position: [verein.geometry.coordinates[0], verein.geometry.coordinates[1]],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"mb-1\",\n                style: {\n                  width: '15rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: verein.kgvname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                    className: \"mb-2 text-muted\",\n                    children: [verein.adresse.strasse, \", \", verein.adresse.plz, \" \", verein.adresse.stadt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                    className: \"mb-2 text-muted\",\n                    children: verein.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                    className: \"mb-2 text-muted\",\n                    children: verein.web\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    className: \"mb-1\",\n                    variant: \"primary\",\n                    children: \"Add to Favourites\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                    text: verein.email,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"sm\",\n                      style: {\n                        backgroundColor: \"#234\"\n                      },\n                      variant: \"primary\",\n                      children: \"Clipboard Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, verein._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: kgvs.map(verein => /*#__PURE__*/_jsxDEV(KgvItem, {\n          favClick: () => favouriteGarden(verein._id),\n          verein: verein\n        }, verein._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Favourite List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: favouritedItems.map(el => el.email),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"clipboard all email addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), favouritedItems.map(verein => /*#__PURE__*/_jsxDEV(Favourites, {\n          favClick: () => favouriteGarden(verein._id),\n          verein: verein\n        }, verein._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 42\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"w101cKUybCv/Z6jSO17hLT1O3dQ=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/kathleen/Schreibtisch/gardenfinder/src/Components/Map.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","carrot","KgvItem","useLocalStorage","CopyToClipboard","Favourites","Container","Row","Col","Card","Button","Map","kgvs","favourites","setFavourites","position","carrotIcon","icon","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","favouriteGarden","gardenid","console","log","indexOf","filter","item","favouritedItems","_id","map","verein","geometry","coordinates","width","kgvname","adresse","strasse","plz","stadt","email","web","backgroundColor","el"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport  carrot from '../assets/carrot.png';\nimport KgvItem from \"./KgvItem\";\nimport useLocalStorage from '../useLocalStorage';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Favourites from \"./Favourites\";\nimport {Container, Row, Col, Card, Button} from \"react-bootstrap\";\n\n\n\nfunction Map({kgvs}) {\n\n  const [favourites, setFavourites] = useLocalStorage('favourite', []);\n\n    const position = [51.330743159430824, 12.36348580378971]\n    const carrotIcon = L.icon({\n      iconUrl: carrot,\n      iconSize:     [38, 38], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [19, 38],\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [0, -38]\n    });\n  \n\n    function favouriteGarden(gardenid) {\n\n      console.log(gardenid)\n      console.log(favourites.indexOf(gardenid))\n\n      if (favourites.indexOf(gardenid) === -1){\n        setFavourites([\n          ...favourites,\n          gardenid\n        ])\n      } else {\n        \n        setFavourites(favourites.filter(item => item != gardenid))\n      }\n    }\n\n    const favouritedItems = kgvs.filter(({_id}) => favourites.indexOf(_id) != -1)\n    console.log(favouritedItems)\n  \n\n    return (\n    <Container fluid>\n      <Row>\n        <Col xs={7}>\n              <MapContainer center={position} zoom={13} scrollWheelZoom={false}>\n              <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n\n            {kgvs.map(verein => (\n                <Marker\n                  key={verein._id}\n                  icon = {carrotIcon}\n                  position={[\n                    verein.geometry.coordinates[0],\n                    verein.geometry.coordinates[1]\n                  ]}\n                >\n                  <Popup>\n                    <Card className=\"mb-1\" style={{ width: '15rem' }}>\n                      <Card.Body>\n                          <Card.Title>{verein.kgvname}</Card.Title>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.adresse.strasse}, {verein.adresse.plz} {verein.adresse.stadt}</Card.Subtitle>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.email}</Card.Subtitle>\n                          <Card.Subtitle className=\"mb-2 text-muted\">{verein.web}</Card.Subtitle>\n                          <Button size=\"sm\" className=\"mb-1\" variant=\"primary\">Add to Favourites</Button>\n                          <CopyToClipboard text={verein.email}>\n                              <Button size=\"sm\" style={{ backgroundColor: \"#234\"}}variant=\"primary\">Clipboard Email</Button>\n                          </CopyToClipboard>\n                       </Card.Body>\n                    </Card>\n                  </Popup>\n                </Marker>  \n              ))}\n            </MapContainer>\n        </Col>\n\n        <Col>\n            {kgvs.map(verein => <KgvItem favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)} \n        </Col>\n        <Col>\n          <h2>Favourite List</h2>\n          <CopyToClipboard text={favouritedItems.map(el => el.email)}>\n            <button>clipboard all email addresses</button>\n          </CopyToClipboard>\n          {favouritedItems.map(verein => <Favourites favClick={() => favouriteGarden(verein._id)} verein={verein} key={verein._id}/>)}\n        </Col>\n      </Row>\n    </Container>\n   \n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}